SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN exitBB: 
for.inc8.i:                                       ; preds = %for.inc8.i.loopexit, %for.cond1.preheader.i
  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next122.i, metadata !99, metadata !DIExpression()), !dbg !101
  %exitcond124.i = icmp eq i64 %indvars.iv.next122.i, %wide.trip.count123.i, !dbg !103
  br i1 %exitcond124.i, label %for.cond15.preheader.lr.ph.i, label %for.cond1.preheader.i, !dbg !106, !llvm.loop !129

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN exitBB: 
for.body3.i:                                      ; preds = %for.body3.i, %for.body3.lr.ph.i
  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv117.i, metadata !100, metadata !DIExpression()), !dbg !101
  %11 = trunc i64 %indvars.iv117.i to i32, !dbg !117
  %conv4.i = sitofp i32 %11 to double, !dbg !117
  %mul.i = fmul double %conv.i64, %conv4.i, !dbg !118
  %div.i = fdiv double %mul.i, %conv5.i, !dbg !119
  %arrayidx7.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv117.i, !dbg !120
  store double %div.i, double* %arrayidx7.i, align 8, !dbg !121, !tbaa !122
  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next118.i, metadata !100, metadata !DIExpression()), !dbg !101
  %exitcond120.i = icmp eq i64 %indvars.iv.next118.i, %7, !dbg !125
  br i1 %exitcond120.i, label %for.inc8.i.loopexit, label %for.body3.i, !dbg !110, !llvm.loop !126

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN exitBB: 
for.inc31.i:                                      ; preds = %for.inc31.i.loopexit, %for.cond15.preheader.i
  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next114.i, metadata !99, metadata !DIExpression()), !dbg !101
  %exitcond116.i = icmp eq i64 %indvars.iv.next114.i, %wide.trip.count123.i, !dbg !149
  br i1 %exitcond116.i, label %for.cond34.preheader.i.loopexit, label %for.cond15.preheader.i, !dbg !116, !llvm.loop !150

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN exitBB: 
for.body18.i:                                     ; preds = %for.body18.i, %for.body18.lr.ph.i
  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv109.i, metadata !100, metadata !DIExpression()), !dbg !101
  %14 = trunc i64 %indvars.iv109.i to i32, !dbg !139
  %conv20.i = sitofp i32 %14 to double, !dbg !139
  %mul21.i = fmul double %conv19.i, %conv20.i, !dbg !140
  %div23.i = fdiv double %mul21.i, %conv5.i, !dbg !141
  %arrayidx27.i = getelementptr inbounds double, double* %arrayidx25.i, i64 %indvars.iv109.i, !dbg !142
  store double %div23.i, double* %arrayidx27.i, align 8, !dbg !143, !tbaa !122
  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next110.i, metadata !100, metadata !DIExpression()), !dbg !101
  %exitcond112.i = icmp eq i64 %indvars.iv.next110.i, %8, !dbg !145
  br i1 %exitcond112.i, label %for.inc31.i.loopexit, label %for.body18.i, !dbg !131, !llvm.loop !146

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN exitBB: 
for.inc54.i:                                      ; preds = %for.inc54.i.loopexit, %for.cond38.preheader.i
  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next106.i, metadata !99, metadata !DIExpression()), !dbg !101
  %exitcond108.i = icmp eq i64 %indvars.iv.next106.i, %8, !dbg !132
  br i1 %exitcond108.i, label %init_array.exit.loopexit, label %for.cond38.preheader.i, !dbg !135, !llvm.loop !163

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN exitBB: 
for.body41.i:                                     ; preds = %for.body41.i, %for.body41.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !100, metadata !DIExpression()), !dbg !101
  %17 = trunc i64 %indvars.iv.i to i32, !dbg !153
  %conv43.i = sitofp i32 %17 to double, !dbg !153
  %mul44.i = fmul double %conv42.i, %conv43.i, !dbg !154
  %div46.i = fdiv double %mul44.i, %conv45.i, !dbg !155
  %arrayidx50.i = getelementptr inbounds double, double* %arrayidx48.i, i64 %indvars.iv.i, !dbg !156
  store double %div46.i, double* %arrayidx50.i, align 8, !dbg !157, !tbaa !122
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !100, metadata !DIExpression()), !dbg !101
  %exitcond.i = icmp eq i64 %indvars.iv.next.i, %7, !dbg !159
  br i1 %exitcond.i, label %for.inc54.i.loopexit, label %for.body41.i, !dbg !152, !llvm.loop !160

SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN exitBB: 
for.inc8.i75:                                     ; preds = %for.inc8.i75.loopexit, %for.cond1.preheader.i66
  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next32.i, metadata !197, metadata !DIExpression()) #7, !dbg !199
  %exitcond34.i = icmp eq i64 %indvars.iv.next32.i, %31, !dbg !226
  br i1 %exitcond34.i, label %print_array.exit.loopexit, label %for.cond1.preheader.i66, !dbg !201, !llvm.loop !227

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN exitBB: 
for.inc.i:                                        ; preds = %if.then.i, %for.body3.i72
  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i73, metadata !198, metadata !DIExpression()) #7, !dbg !199
  %exitcond.i74 = icmp eq i64 %indvars.iv.next.i73, %7, !dbg !222
  br i1 %exitcond.i74, label %for.inc8.i75.loopexit, label %for.body3.i72, !dbg !207, !llvm.loop !223

creating subregion: entry
=================SUSAN: START OF marking region : entry==================
creating subregion: for.cond1.preheader.i
=================SUSAN: START OF marking region : for.cond1.preheader.i==================
SUSAN: found latchfor.body3.i
=================SUSAN: END OF marking region : for.cond1.preheader.i==================
SUSAN: found latchfor.inc8.i
SUSAN: found latchfor.body3.i
creating subregion: for.cond15.preheader.i
=================SUSAN: START OF marking region : for.cond15.preheader.i==================
SUSAN: found latchfor.body18.i
=================SUSAN: END OF marking region : for.cond15.preheader.i==================
SUSAN: found latchfor.inc8.i
SUSAN: found latchfor.inc31.i
SUSAN: found latchfor.body18.i
=================SUSAN: END OF marking region : entry==================
creating subregion: for.cond34.preheader.i
=================SUSAN: START OF marking region : for.cond34.preheader.i==================
creating subregion: for.cond38.preheader.i
=================SUSAN: START OF marking region : for.cond38.preheader.i==================
SUSAN: found latchfor.body41.i
=================SUSAN: END OF marking region : for.cond38.preheader.i==================
SUSAN: found latchfor.inc54.i
SUSAN: found latchfor.body41.i
=================SUSAN: END OF marking region : for.cond34.preheader.i==================
creating subregion: init_array.exit
=================SUSAN: START OF marking region : init_array.exit==================
creating subregion: if.then
=================SUSAN: START OF marking region : if.then==================
creating subregion: for.cond1.preheader.i66
=================SUSAN: START OF marking region : for.cond1.preheader.i66==================
creating subregion: for.body3.i72
=================SUSAN: START OF marking region : for.body3.i72==================
=================SUSAN: END OF marking region : for.body3.i72==================
SUSAN: found latchfor.inc.i
SUSAN: found latchfor.inc.i
=================SUSAN: END OF marking region : for.cond1.preheader.i66==================
SUSAN: found latchfor.inc8.i75
SUSAN: found latchfor.inc.i
=================SUSAN: END OF marking region : if.then==================
=================SUSAN: END OF marking region : init_array.exit==================
SUSAN: found latchfor.inc8.i
SUSAN: found latchfor.body3.i
SUSAN: found latchfor.inc54.i
SUSAN: found latchfor.body41.i
SUSAN: found latchfor.inc8.i
SUSAN: found latchfor.inc31.i
SUSAN: found latchfor.inc8.i75
SUSAN: found latchfor.body18.i
SUSAN: found latchfor.inc54.i
SUSAN: found latchfor.inc.i
SUSAN: found latchfor.inc31.i
SUSAN: found latchfor.inc.i
SUSAN: found latchfor.inc8.i75
SUSAN: Node: topRegion
then SubNodes: 
entry
for.cond34.preheader.i
init_array.exit
else SubNodes: 
current region then bbs:
entry
for.cond34.preheader.i
init_array.exit
if.end
for.inc54.i
print_array.exit
for.inc31.i
for.inc8.i75
current region else bbs:
current region then edges:
entry -> for.cond34.preheader.i
for.cond34.preheader.i -> init_array.exit
init_array.exit -> if.end
init_array.exit.loopexit -> init_array.exit
for.inc54.i.loopexit -> for.inc54.i
for.cond34.preheader.i.loopexit -> for.cond34.preheader.i
print_array.exit.loopexit -> print_array.exit
for.inc31.i.loopexit -> for.inc31.i
for.inc8.i75.loopexit -> for.inc8.i75
current region else edges:
SUSAN: Node entry
then SubNodes: 
for.cond1.preheader.i
for.cond15.preheader.i
else SubNodes: 
current region then bbs:
for.cond1.preheader.lr.ph.i
for.cond1.preheader.i
for.inc8.i
for.cond15.preheader.lr.ph.i
for.cond15.preheader.i
for.inc31.i
for.cond34.preheader.i.loopexit
current region else bbs:
current region then edges:
entry -> for.cond1.preheader.lr.ph.i
for.cond1.preheader.lr.ph.i -> for.cond1.preheader.i
for.cond1.preheader.i -> for.inc8.i
for.inc8.i -> for.cond15.preheader.lr.ph.i
for.cond15.preheader.lr.ph.i -> for.cond15.preheader.i
for.inc8.i.loopexit -> for.inc8.i
for.cond15.preheader.i -> for.inc31.i
for.inc31.i -> for.cond34.preheader.i.loopexit
current region else edges:
SUSAN: Node for.cond34.preheader.i
then SubNodes: 
for.cond38.preheader.i
else SubNodes: 
current region then bbs:
for.cond38.preheader.lr.ph.i
for.cond38.preheader.i
for.inc54.i
init_array.exit.loopexit
current region else bbs:
current region then edges:
for.cond34.preheader.i -> for.cond38.preheader.lr.ph.i
for.cond38.preheader.lr.ph.i -> for.cond38.preheader.i
for.cond38.preheader.i -> for.inc54.i
for.inc54.i -> init_array.exit.loopexit
current region else edges:
SUSAN: Node init_array.exit
then SubNodes: 
if.then
else SubNodes: 
current region then bbs:
if.then
print_array.exit
if.end
current region else bbs:
current region then edges:
init_array.exit -> if.then
if.then -> print_array.exit
print_array.exit -> if.end
current region else edges:
SUSAN: Node for.cond1.preheader.i
then SubNodes: 
else SubNodes: 
current region then bbs:
for.body3.lr.ph.i
for.body3.i
for.inc8.i.loopexit
current region else bbs:
current region then edges:
for.cond1.preheader.i -> for.body3.lr.ph.i
for.body3.lr.ph.i -> for.body3.i
for.body3.i -> for.inc8.i.loopexit
current region else edges:
SUSAN: Node for.cond15.preheader.i
then SubNodes: 
else SubNodes: 
current region then bbs:
for.body18.lr.ph.i
for.body18.i
for.inc31.i.loopexit
current region else bbs:
current region then edges:
for.cond15.preheader.i -> for.body18.lr.ph.i
for.body18.lr.ph.i -> for.body18.i
for.body18.i -> for.inc31.i.loopexit
current region else edges:
SUSAN: Node for.cond38.preheader.i
then SubNodes: 
else SubNodes: 
current region then bbs:
for.body41.lr.ph.i
for.body41.i
for.inc54.i.loopexit
current region else bbs:
current region then edges:
for.cond38.preheader.i -> for.body41.lr.ph.i
for.body41.lr.ph.i -> for.body41.i
for.body41.i -> for.inc54.i.loopexit
current region else edges:
SUSAN: Node if.then
then SubNodes: 
for.cond1.preheader.i66
else SubNodes: 
current region then bbs:
for.cond1.preheader.lr.ph.i65
for.cond1.preheader.i66
for.inc8.i75
print_array.exit.loopexit
current region else bbs:
current region then edges:
if.then -> for.cond1.preheader.lr.ph.i65
for.cond1.preheader.lr.ph.i65 -> for.cond1.preheader.i66
for.cond1.preheader.i66 -> for.inc8.i75
for.inc8.i75 -> print_array.exit.loopexit
current region else edges:
SUSAN: Node for.cond1.preheader.i66
then SubNodes: 
for.body3.i72
else SubNodes: 
current region then bbs:
for.body3.lr.ph.i69
for.body3.i72
for.inc.i
for.inc8.i75.loopexit
current region else bbs:
current region then edges:
for.cond1.preheader.i66 -> for.body3.lr.ph.i69
for.body3.lr.ph.i69 -> for.body3.i72
for.body3.i72 -> for.inc.i
if.then.i -> for.inc.i
for.inc.i -> for.inc8.i75.loopexit
current region else edges:
SUSAN: Node for.body3.i72
then SubNodes: 
else SubNodes: 
current region then bbs:
if.then.i
current region else bbs:
current region then edges:
for.body3.i72 -> if.then.i
current region else edges:
SUSAN: BB entry times2bePrinted: 1
SUSAN: BB for.cond1.preheader.lr.ph.i times2bePrinted: 1
SUSAN: BB for.cond1.preheader.i times2bePrinted: 1
SUSAN: BB for.body3.lr.ph.i times2bePrinted: 1
SUSAN: BB for.cond15.preheader.lr.ph.i times2bePrinted: 1
SUSAN: BB for.body3.i times2bePrinted: 1
SUSAN: BB for.inc8.i.loopexit times2bePrinted: 1
SUSAN: BB for.inc8.i times2bePrinted: 1
SUSAN: BB for.cond15.preheader.i times2bePrinted: 1
SUSAN: BB for.body18.lr.ph.i times2bePrinted: 1
SUSAN: BB for.cond34.preheader.i.loopexit times2bePrinted: 1
SUSAN: BB for.cond34.preheader.i times2bePrinted: 1
SUSAN: BB for.cond38.preheader.lr.ph.i times2bePrinted: 1
SUSAN: BB for.body18.i times2bePrinted: 1
SUSAN: BB for.inc31.i.loopexit times2bePrinted: 1
SUSAN: BB for.inc31.i times2bePrinted: 2
SUSAN: BB for.cond38.preheader.i times2bePrinted: 1
SUSAN: BB for.body41.lr.ph.i times2bePrinted: 1
SUSAN: BB for.body41.i times2bePrinted: 1
SUSAN: BB for.inc54.i.loopexit times2bePrinted: 1
SUSAN: BB for.inc54.i times2bePrinted: 2
SUSAN: BB init_array.exit.loopexit times2bePrinted: 1
SUSAN: BB init_array.exit times2bePrinted: 1
SUSAN: BB if.then times2bePrinted: 1
SUSAN: BB for.cond1.preheader.lr.ph.i65 times2bePrinted: 1
SUSAN: BB for.cond1.preheader.i66 times2bePrinted: 1
SUSAN: BB for.body3.lr.ph.i69 times2bePrinted: 1
SUSAN: BB for.body3.i72 times2bePrinted: 1
SUSAN: BB if.then.i times2bePrinted: 1
SUSAN: BB for.inc.i times2bePrinted: 1
SUSAN: BB for.inc8.i75.loopexit times2bePrinted: 1
SUSAN: BB for.inc8.i75 times2bePrinted: 2
SUSAN: BB print_array.exit.loopexit times2bePrinted: 1
SUSAN: BB print_array.exit times2bePrinted: 2
SUSAN: BB if.end times2bePrinted: 2
SUSAN: resgitering deleteAndReplaceInsts:   %7 = and i64 %call.i60, 4294967295
SUSAN: resgitering deleteAndReplaceInsts:   %8 = and i64 %call.i62, 4294967295
SUSAN: resgitering deleteAndReplaceInsts:   %wide.trip.count123.i = and i64 %call.i58, 4294967295, !dbg !103
SUSAN: resgitering deleteAndReplaceInsts:   %31 = and i64 %call.i58, 4294967295
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
=========LOOP PROFILES=========
Loop: Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

isomp: 0
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
Loop: Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

isomp: 0
ub:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
Loop: Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

isomp: 0
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
Loop: Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

isomp: 0
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
Loop: Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

isomp: 0
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
Loop: Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

isomp: 0
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
Loop: Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

isomp: 0
ub:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
Loop: Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

isomp: 0
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
SUSAN: compared val:  %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
SUSAN: loop is: Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
lb: i64 0
added br to dead branches 0  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
SUSAN: loop is: Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
lb: i64 0
added br to dead branches 0  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
SUSAN: loop is: Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
lb: i64 0
added br to dead branches 0  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
SUSAN: compared val:  %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
SUSAN: loop is: Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

branch:   br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
SUSAN: loop is: Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

branch:   br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
SUSAN: loop is: Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

branch:   br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
SUSAN: compared val:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
SUSAN: compared val:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
SUSAN: compared val:  %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
SUSAN: loop is: Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

branch:   br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
ub:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
lb: i64 0
added br to dead branches 0  br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
SUSAN: loop is: Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

branch:   br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
ub:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
lb: i64 0
added br to dead branches 0  br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
SUSAN: compared val:  %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
SUSAN: loop is: Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

branch:   br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
ub:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
lb: i64 0
added br to dead branches 0  br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
SUSAN: loop is: Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

branch:   br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
ub:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
lb: i64 0
added br to dead branches 0  br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
SUSAN: compared val:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
SUSAN: compared val:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
SUSAN: compared val:  %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
SUSAN: loop is: Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

branch:   br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
SUSAN: loop is: Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

branch:   br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
SUSAN: loop is: Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

branch:   br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
SUSAN: compared val:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
SUSAN: compared val:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
SUSAN: compared val:  %call.i = tail call i64 @strtol(i8* nocapture nonnull %0, i8** null, i32 10) #7, !dbg !52
SUSAN: compared val:  %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
SUSAN: loop is: Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
lb: i64 0
added br to dead branches 0  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
SUSAN: loop is: Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
lb: i64 0
added br to dead branches 0  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
SUSAN: loop is: Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
lb: i64 0
added br to dead branches 0  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
SUSAN: compared val:  %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
SUSAN: loop is: Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

branch:   br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
SUSAN: loop is: Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

branch:   br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
SUSAN: loop is: Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

branch:   br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
lb: i64 0
added br to dead branches 0  br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
SUSAN: compared val:  %rem.i = srem i32 %add.i, 20, !dbg !216
SUSAN: compared val:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
SUSAN: compared val:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
=========================SUSAN: IR NAMING BEFORE=====================
  %ni.addr.i = alloca i32, align 4 -> ni
  %nj.addr.i = alloca i32, align 4 -> nj
  %nk.addr.i = alloca i32, align 4 -> nk
  %alpha.addr.i = alloca double, align 8 -> alpha
  %beta.addr.i = alloca double, align 8 -> beta
  %C.addr.i = alloca double*, align 8 -> C
  %A.addr.i = alloca double*, align 8 -> A
  %B.addr.i = alloca double*, align 8 -> B
  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ] -> i
  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221 -> j
  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225 -> i
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39 -> __nptr
  %conv.i = trunc i64 %call.i to i32, !dbg !53 -> dump_code
  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39 -> __nptr
  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58 -> ni
  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39 -> __nptr
  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63 -> nj
  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39 -> __nptr
  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68 -> nk
  %4 = bitcast i8* %call8 to double*, !dbg !73 -> C
  %5 = bitcast i8* %call12 to double*, !dbg !77 -> A
  %6 = bitcast i8* %call16 to double*, !dbg !82 -> B
  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ] -> j
  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124 -> j
  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128 -> i
  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ] -> i
  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ] -> j
  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144 -> j
  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148 -> i
  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ] -> i
  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ] -> j
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158 -> j
  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162 -> i
  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ] -> i
  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ] -> j
SUSAN: inst:  %ni.addr.i = alloca i32, align 4
ni:  %ni.addr.i = alloca i32, align 4
SUSAN: inst:  %nj.addr.i = alloca i32, align 4
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
SUSAN: inst:  %nk.addr.i = alloca i32, align 4
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %alpha.addr.i = alloca double, align 8
alpha:  %alpha.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %beta.addr.i = alloca double, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %C.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %A.addr.i = alloca double*, align 8
A:  %A.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %B.addr.i = alloca double*, align 8
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp6.i = icmp eq i32 %rem.i, 0, !dbg !217
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp6.i, label %if.then.i, label %for.inc.i, !dbg !218
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !219, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %fputc25.i = call i32 @fputc(i32 10, %struct._IO_FILE* %38) #8, !dbg !220
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc.i, !dbg !220
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i73, metadata !198, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond.i74 = icmp eq i64 %indvars.iv.next.i73, %7, !dbg !222
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond.i74, label %for.inc8.i75.loopexit, label %for.body3.i72, !dbg !207, !llvm.loop !223
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc8.i75, !dbg !225
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next32.i, metadata !197, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond34.i = icmp eq i64 %indvars.iv.next32.i, %31, !dbg !226
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %.kmpc_loc.addr.i = alloca %struct.ident_t, align 8
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %argc, metadata !26, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8** %argv, metadata !27, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !38
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8* %0, metadata !43, metadata !DIExpression()) #7, !dbg !50
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %call.i = tail call i64 @strtol(i8* nocapture nonnull %0, i8** null, i32 10) #7, !dbg !52
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %conv.i = trunc i64 %call.i to i32, !dbg !53
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i, metadata !28, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !54
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8* %1, metadata !43, metadata !DIExpression()) #7, !dbg !55
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !29, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !59
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8* %2, metadata !43, metadata !DIExpression()) #7, !dbg !60
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !30, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !64
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8* %3, metadata !43, metadata !DIExpression()) #7, !dbg !65
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !31, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul = shl i64 %call.i58, 32, !dbg !69
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %sext = mul i64 %mul, %call.i60, !dbg !70
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul7 = ashr exact i64 %sext, 29, !dbg !71
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %call8 = tail call noalias i8* @malloc(i64 %mul7) #7, !dbg !72
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %4 = bitcast i8* %call8 to double*, !dbg !73
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %4, metadata !34, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %sext78 = mul i64 %mul, %call.i62, !dbg !74
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul11 = ashr exact i64 %sext78, 29, !dbg !75
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %call12 = tail call noalias i8* @malloc(i64 %mul11) #7, !dbg !76
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %5 = bitcast i8* %call12 to double*, !dbg !77
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %5, metadata !35, metadata !DIExpression()), !dbg !37
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul13 = shl i64 %call.i60, 32, !dbg !78
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %sext79 = mul i64 %mul13, %call.i62, !dbg !79
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul15 = ashr exact i64 %sext79, 29, !dbg !80
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %call16 = tail call noalias i8* @malloc(i64 %mul15) #7, !dbg !81
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %6 = bitcast i8* %call16 to double*, !dbg !82
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %6, metadata !36, metadata !DIExpression()), !dbg !37
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !83, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !92, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !93, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %4, metadata !96, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %5, metadata !97, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %6, metadata !98, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %7 = and i64 %call.i60, 4294967295
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %8 = and i64 %call.i62, 4294967295
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp102.i = icmp sgt i32 %conv.i59, 0, !dbg !103
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp2100.i = icmp sgt i32 %conv.i61, 0, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv5.i = sitofp i32 %conv.i59 to double, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %wide.trip.count123.i = and i64 %call.i58, 4294967295, !dbg !103
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond1.preheader.i, !dbg !106
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv121.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %9 = trunc i64 %indvars.iv121.i to i32, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv.i64 = sitofp i32 %9 to double, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %10 = mul nuw nsw i64 %indvars.iv121.i, %7, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx.i = getelementptr inbounds double, double* %4, i64 %10, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.body3.i, !dbg !110
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp1695.i = icmp sgt i32 %conv.i63, 0, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond15.preheader.i, !dbg !116
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv117.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %11 = trunc i64 %indvars.iv117.i to i32, !dbg !117
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv4.i = sitofp i32 %11 to double, !dbg !117
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul.i = fmul double %conv.i64, %conv4.i, !dbg !118
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %div.i = fdiv double %mul.i, %conv5.i, !dbg !119
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx7.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv117.i, !dbg !120
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double %div.i, double* %arrayidx7.i, align 8, !dbg !121, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next118.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond120.i = icmp eq i64 %indvars.iv.next118.i, %7, !dbg !125
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond120.i, label %for.inc8.i.loopexit, label %for.body3.i, !dbg !110, !llvm.loop !126
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc8.i, !dbg !128
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next122.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond124.i = icmp eq i64 %indvars.iv.next122.i, %wide.trip.count123.i, !dbg !103
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond124.i, label %for.cond15.preheader.lr.ph.i, label %for.cond1.preheader.i, !dbg !106, !llvm.loop !129
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv113.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %12 = trunc i64 %indvars.iv113.i to i32, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv19.i = sitofp i32 %12 to double, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %13 = mul nuw nsw i64 %indvars.iv113.i, %8, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx25.i = getelementptr inbounds double, double* %5, i64 %13, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.body18.i, !dbg !131
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond34.preheader.i, !dbg !132
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp3592.i = icmp sgt i32 %conv.i63, 0, !dbg !132
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp3990.i = icmp sgt i32 %conv.i61, 0, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv45.i = sitofp i32 %conv.i59 to double, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond38.preheader.i, !dbg !135
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv109.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %14 = trunc i64 %indvars.iv109.i to i32, !dbg !139
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv20.i = sitofp i32 %14 to double, !dbg !139
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul21.i = fmul double %conv19.i, %conv20.i, !dbg !140
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %div23.i = fdiv double %mul21.i, %conv5.i, !dbg !141
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx27.i = getelementptr inbounds double, double* %arrayidx25.i, i64 %indvars.iv109.i, !dbg !142
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double %div23.i, double* %arrayidx27.i, align 8, !dbg !143, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next110.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond112.i = icmp eq i64 %indvars.iv.next110.i, %8, !dbg !145
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond112.i, label %for.inc31.i.loopexit, label %for.body18.i, !dbg !131, !llvm.loop !146
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc31.i, !dbg !148
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next114.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond116.i = icmp eq i64 %indvars.iv.next114.i, %wide.trip.count123.i, !dbg !149
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond116.i, label %for.cond34.preheader.i.loopexit, label %for.cond15.preheader.i, !dbg !116, !llvm.loop !150
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond34.i, label %print_array.exit.loopexit, label %for.cond1.preheader.i66, !dbg !201, !llvm.loop !227
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %print_array.exit, !dbg !229
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !229, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #8, !dbg !230
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %if.end, !dbg !231
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @free(i8* %call8) #7, !dbg !232
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @free(i8* %call12) #7, !dbg !233
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @free(i8* %call16) #7, !dbg !234
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  ret i32 0, !dbg !235
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv105.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %15 = trunc i64 %indvars.iv105.i to i32, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv42.i = sitofp i32 %15 to double, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %16 = mul nuw nsw i64 %indvars.iv105.i, %7, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx48.i = getelementptr inbounds double, double* %6, i64 %16, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.body41.i, !dbg !152
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %17 = trunc i64 %indvars.iv.i to i32, !dbg !153
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv43.i = sitofp i32 %17 to double, !dbg !153
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul44.i = fmul double %conv42.i, %conv43.i, !dbg !154
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %div46.i = fdiv double %mul44.i, %conv45.i, !dbg !155
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx50.i = getelementptr inbounds double, double* %arrayidx48.i, i64 %indvars.iv.i, !dbg !156
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double %div46.i, double* %arrayidx50.i, align 8, !dbg !157, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond.i = icmp eq i64 %indvars.iv.next.i, %7, !dbg !159
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond.i, label %for.inc54.i.loopexit, label %for.body41.i, !dbg !152, !llvm.loop !160
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc54.i, !dbg !162
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next106.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond108.i = icmp eq i64 %indvars.iv.next106.i, %8, !dbg !132
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond108.i, label %init_array.exit.loopexit, label %for.cond38.preheader.i, !dbg !135, !llvm.loop !163
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %init_array.exit
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !32, metadata !DIExpression()), !dbg !37
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !33, metadata !DIExpression()), !dbg !37
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %18 = bitcast i32* %ni.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %19 = bitcast i32* %nj.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %20 = bitcast i32* %nk.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %21 = bitcast double* %alpha.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %22 = bitcast double* %beta.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %23 = bitcast double** %C.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %24 = bitcast double** %A.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %25 = bitcast double** %B.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %26 = bitcast %struct.ident_t* %.kmpc_loc.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !165, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i32 %conv.i59, i32* %ni.addr.i, align 4, !tbaa !182
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !170, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i32 %conv.i61, i32* %nj.addr.i, align 4, !tbaa !182
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !171, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i32 %conv.i63, i32* %nk.addr.i, align 4, !tbaa !182
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !172, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double 3.241200e+04, double* %alpha.addr.i, align 8, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !173, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double 2.123000e+03, double* %beta.addr.i, align 8, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %4, metadata !174, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %28 = bitcast double** %C.addr.i to i8**
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i8* %call8, i8** %28, align 8, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %5, metadata !175, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %29 = bitcast double** %A.addr.i to i8**
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i8* %call12, i8** %29, align 8, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %6, metadata !176, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %30 = bitcast double** %B.addr.i to i8**
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i8* %call16, i8** %30, align 8, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !165, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %31 = and i64 %call.i58, 4294967295
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !170, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !171, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %32 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !184
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1, i64 0, i64 0), i8** %32, align 8, !dbg !184, !tbaa !185
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %ni.addr.i, metadata !165, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %nj.addr.i, metadata !170, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %nk.addr.i, metadata !171, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %alpha.addr.i, metadata !172, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %beta.addr.i, metadata !173, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %C.addr.i, metadata !174, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %A.addr.i, metadata !175, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %B.addr.i, metadata !176, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 14, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i64, i64, double**, double*, i32*, double*, i64, i64, double**, i64, i64, double**)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* nonnull %ni.addr.i, i32* nonnull %nj.addr.i, i64 %31, i64 %7, double** nonnull %C.addr.i, double* nonnull %beta.addr.i, i32* nonnull %nk.addr.i, double* nonnull %alpha.addr.i, i64 %31, i64 %8, double** nonnull %A.addr.i, i64 %8, i64 %7, double** nonnull %B.addr.i) #7, !dbg !184
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp = icmp eq i32 %conv.i, 1, !dbg !187
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp, label %if.then, label %if.end, !dbg !189
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !190, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !195, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %4, metadata !196, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !197, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp226.i = icmp sgt i32 %conv.i61, 0, !dbg !203
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond1.preheader.i66, !dbg !201
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv31.i, metadata !197, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !198, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %33 = mul nuw nsw i64 %indvars.iv31.i, %7, !dbg !208
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx.i67 = getelementptr inbounds double, double* %4, i64 %33, !dbg !208
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %34 = trunc i64 %indvars.iv31.i to i32, !dbg !210
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul.i68 = mul nsw i32 %34, %conv.i59, !dbg !210
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.body3.i72, !dbg !207
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.i70, metadata !198, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !212, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx5.i = getelementptr inbounds double, double* %arrayidx.i67, i64 %indvars.iv.i70, !dbg !213
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %36 = load double, double* %arrayidx5.i, align 8, !dbg !213, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %call.i71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), double %36) #8, !dbg !214
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %37 = trunc i64 %indvars.iv.i70 to i32, !dbg !215
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %add.i = add nsw i32 %mul.i68, %37, !dbg !215
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %rem.i = srem i32 %add.i, 20, !dbg !216
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %27 = call i8* @memcpy(i8* %26, i8* bitcast (%struct.ident_t* @0 to i8*), i64 16)
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
=========================SUSAN: IR NAMING=====================
  %alpha.addr.i = alloca double, align 8 -> alpha
  %beta.addr.i = alloca double, align 8 -> beta
  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ] -> i
  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221 -> j
  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225 -> i
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39 -> __nptr
  %conv.i = trunc i64 %call.i to i32, !dbg !53 -> dump_code
  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39 -> __nptr
  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39 -> __nptr
  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39 -> __nptr
  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ] -> j
  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124 -> j
  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128 -> i
  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ] -> i
  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ] -> j
  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144 -> j
  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148 -> i
  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ] -> i
  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ] -> j
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158 -> j
  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162 -> i
  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ] -> i
  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ] -> j
SUSAN: declaring local:   %ni.addr.i = alloca i32, align 4
SUSAN: declaring varName 5264: llvm_cbe_ni_2e_addr_2e_i
SUSAN: declaring local:   %nj.addr.i = alloca i32, align 4
SUSAN: declaring varName 5264: llvm_cbe_nj_2e_addr_2e_i
SUSAN: declaring local:   %nk.addr.i = alloca i32, align 4
SUSAN: declaring varName 5264: llvm_cbe_nk_2e_addr_2e_i
SUSAN: declaring local:   %alpha.addr.i = alloca double, align 8
SUSAN: declaring varName 5264: alpha
SUSAN: declaring local:   %beta.addr.i = alloca double, align 8
SUSAN: declaring varName 5264: beta
SUSAN: declaring local:   %C.addr.i = alloca double*, align 8
SUSAN: declaring varName 5264: llvm_cbe_C_2e_addr_2e_i
SUSAN: declaring local:   %A.addr.i = alloca double*, align 8
SUSAN: declaring varName 5264: llvm_cbe_A_2e_addr_2e_i
SUSAN: declaring local:   %B.addr.i = alloca double*, align 8
SUSAN: declaring varName 5264: llvm_cbe_B_2e_addr_2e_i
SUSAN: declaring local:   %.kmpc_loc.addr.i = alloca %struct.ident_t, align 8
SUSAN: declaring varName 5264: llvm_cbe__2e_kmpc_loc_2e_addr_2e_i
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %argc, metadata !26, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i8** %argv, metadata !27, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !38
SUSAN: declaring local:   %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i8* %0, metadata !43, metadata !DIExpression()) #7, !dbg !50
SUSAN: declaring local:   %call.i = tail call i64 @strtol(i8* nocapture nonnull %0, i8** null, i32 10) #7, !dbg !52
SUSAN: declaring varName 5298: llvm_cbe_call_2e_i
SUSAN: declaring   %call.i = tail call i64 @strtol(i8* nocapture nonnull %0, i8** null, i32 10) #7, !dbg !52
SUSAN: declaring local:   %conv.i = trunc i64 %call.i to i32, !dbg !53
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i, metadata !28, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !54
SUSAN: declaring local:   %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i8* %1, metadata !43, metadata !DIExpression()) #7, !dbg !55
SUSAN: declaring local:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
SUSAN: declaring varName 5298: llvm_cbe_call_2e_i58
SUSAN: declaring   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
SUSAN: declaring local:   %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !29, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !59
SUSAN: declaring local:   %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i8* %2, metadata !43, metadata !DIExpression()) #7, !dbg !60
SUSAN: declaring local:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
SUSAN: declaring varName 5298: llvm_cbe_call_2e_i60
SUSAN: declaring   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
SUSAN: declaring local:   %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !30, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !64
SUSAN: declaring local:   %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i8* %3, metadata !43, metadata !DIExpression()) #7, !dbg !65
SUSAN: declaring local:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
SUSAN: declaring varName 5298: llvm_cbe_call_2e_i62
SUSAN: declaring   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
SUSAN: declaring local:   %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !31, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   %mul = shl i64 %call.i58, 32, !dbg !69
SUSAN: declaring varName 5298: llvm_cbe_mul
SUSAN: declaring   %mul = shl i64 %call.i58, 32, !dbg !69
SUSAN: declaring local:   %sext = mul i64 %mul, %call.i60, !dbg !70
SUSAN: declaring local:   %mul7 = ashr exact i64 %sext, 29, !dbg !71
SUSAN: declaring local:   %call8 = tail call noalias i8* @malloc(i64 %mul7) #7, !dbg !72
SUSAN: declaring varName 5298: llvm_cbe_call8
SUSAN: declaring   %call8 = tail call noalias i8* @malloc(i64 %mul7) #7, !dbg !72
SUSAN: declaring local:   %4 = bitcast i8* %call8 to double*, !dbg !73
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %4, metadata !34, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   %sext78 = mul i64 %mul, %call.i62, !dbg !74
SUSAN: declaring local:   %mul11 = ashr exact i64 %sext78, 29, !dbg !75
SUSAN: declaring local:   %call12 = tail call noalias i8* @malloc(i64 %mul11) #7, !dbg !76
SUSAN: declaring varName 5298: llvm_cbe_call12
SUSAN: declaring   %call12 = tail call noalias i8* @malloc(i64 %mul11) #7, !dbg !76
SUSAN: declaring local:   %5 = bitcast i8* %call12 to double*, !dbg !77
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %5, metadata !35, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   %mul13 = shl i64 %call.i60, 32, !dbg !78
SUSAN: declaring local:   %sext79 = mul i64 %mul13, %call.i62, !dbg !79
SUSAN: declaring local:   %mul15 = ashr exact i64 %sext79, 29, !dbg !80
SUSAN: declaring local:   %call16 = tail call noalias i8* @malloc(i64 %mul15) #7, !dbg !81
SUSAN: declaring varName 5298: llvm_cbe_call16
SUSAN: declaring   %call16 = tail call noalias i8* @malloc(i64 %mul15) #7, !dbg !81
SUSAN: declaring local:   %6 = bitcast i8* %call16 to double*, !dbg !82
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %6, metadata !36, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !83, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !92, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !93, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %4, metadata !96, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %5, metadata !97, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %6, metadata !98, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %7 = and i64 %call.i60, 4294967295
SUSAN: declaring varName 5298: _1
SUSAN: declaring   %7 = and i64 %call.i60, 4294967295
SUSAN: declaring local:   %8 = and i64 %call.i62, 4294967295
SUSAN: declaring varName 5298: _2
SUSAN: declaring   %8 = and i64 %call.i62, 4294967295
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %cmp102.i = icmp sgt i32 %conv.i59, 0, !dbg !103
SUSAN: declaring local:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
SUSAN: declaring local:   %cmp2100.i = icmp sgt i32 %conv.i61, 0, !dbg !107
SUSAN: declaring local:   %conv5.i = sitofp i32 %conv.i59 to double, !dbg !107
SUSAN: declaring local:   %wide.trip.count123.i = and i64 %call.i58, 4294967295, !dbg !103
SUSAN: declaring varName 5298: llvm_cbe_wide_2e_trip_2e_count123_2e_i
SUSAN: declaring   %wide.trip.count123.i = and i64 %call.i58, 4294967295, !dbg !103
SUSAN: declaring local:   br label %for.cond1.preheader.i, !dbg !106
SUSAN: declaring local:   %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
SUSAN: declaring varName 5298: i
SUSAN: declaring   %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv121.i, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
SUSAN: declaring local:   %9 = trunc i64 %indvars.iv121.i to i32, !dbg !107
SUSAN: declaring local:   %conv.i64 = sitofp i32 %9 to double, !dbg !107
SUSAN: declaring local:   %10 = mul nuw nsw i64 %indvars.iv121.i, %7, !dbg !107
SUSAN: declaring local:   %arrayidx.i = getelementptr inbounds double, double* %4, i64 %10, !dbg !107
SUSAN: declaring local:   br label %for.body3.i, !dbg !110
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %cmp1695.i = icmp sgt i32 %conv.i63, 0, !dbg !111
SUSAN: declaring local:   br label %for.cond15.preheader.i, !dbg !116
SUSAN: declaring local:   %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
SUSAN: declaring varName 5298: j
SUSAN: declaring   %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv117.i, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %11 = trunc i64 %indvars.iv117.i to i32, !dbg !117
SUSAN: declaring local:   %conv4.i = sitofp i32 %11 to double, !dbg !117
SUSAN: declaring local:   %mul.i = fmul double %conv.i64, %conv4.i, !dbg !118
SUSAN: declaring local:   %div.i = fdiv double %mul.i, %conv5.i, !dbg !119
SUSAN: declaring local:   %arrayidx7.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv117.i, !dbg !120
SUSAN: declaring local:   store double %div.i, double* %arrayidx7.i, align 8, !dbg !121, !tbaa !122
SUSAN: declaring local:   %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
SUSAN: declaring varName 5298: j
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next118.i, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %exitcond120.i = icmp eq i64 %indvars.iv.next118.i, %7, !dbg !125
SUSAN: declaring local:   br i1 %exitcond120.i, label %for.inc8.i.loopexit, label %for.body3.i, !dbg !110, !llvm.loop !126
SUSAN: declaring local:   br label %for.inc8.i, !dbg !128
SUSAN: declaring local:   %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
SUSAN: declaring varName 5298: i
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next122.i, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %exitcond124.i = icmp eq i64 %indvars.iv.next122.i, %wide.trip.count123.i, !dbg !103
SUSAN: declaring local:   br i1 %exitcond124.i, label %for.cond15.preheader.lr.ph.i, label %for.cond1.preheader.i, !dbg !106, !llvm.loop !129
SUSAN: declaring local:   %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
SUSAN: declaring varName 5298: i
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv113.i, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
SUSAN: declaring local:   %12 = trunc i64 %indvars.iv113.i to i32, !dbg !111
SUSAN: declaring local:   %conv19.i = sitofp i32 %12 to double, !dbg !111
SUSAN: declaring local:   %13 = mul nuw nsw i64 %indvars.iv113.i, %8, !dbg !111
SUSAN: declaring local:   %arrayidx25.i = getelementptr inbounds double, double* %5, i64 %13, !dbg !111
SUSAN: declaring local:   br label %for.body18.i, !dbg !131
SUSAN: declaring local:   br label %for.cond34.preheader.i, !dbg !132
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %cmp3592.i = icmp sgt i32 %conv.i63, 0, !dbg !132
SUSAN: declaring local:   br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
SUSAN: declaring local:   %cmp3990.i = icmp sgt i32 %conv.i61, 0, !dbg !136
SUSAN: declaring local:   %conv45.i = sitofp i32 %conv.i59 to double, !dbg !136
SUSAN: declaring local:   br label %for.cond38.preheader.i, !dbg !135
SUSAN: declaring local:   %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
SUSAN: declaring varName 5298: j
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv109.i, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %14 = trunc i64 %indvars.iv109.i to i32, !dbg !139
SUSAN: declaring local:   %conv20.i = sitofp i32 %14 to double, !dbg !139
SUSAN: declaring local:   %mul21.i = fmul double %conv19.i, %conv20.i, !dbg !140
SUSAN: declaring local:   %div23.i = fdiv double %mul21.i, %conv5.i, !dbg !141
SUSAN: declaring local:   %arrayidx27.i = getelementptr inbounds double, double* %arrayidx25.i, i64 %indvars.iv109.i, !dbg !142
SUSAN: declaring local:   store double %div23.i, double* %arrayidx27.i, align 8, !dbg !143, !tbaa !122
SUSAN: declaring local:   %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
SUSAN: declaring varName 5298: j
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next110.i, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %exitcond112.i = icmp eq i64 %indvars.iv.next110.i, %8, !dbg !145
SUSAN: declaring local:   br i1 %exitcond112.i, label %for.inc31.i.loopexit, label %for.body18.i, !dbg !131, !llvm.loop !146
SUSAN: declaring local:   br label %for.inc31.i, !dbg !148
SUSAN: declaring local:   %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
SUSAN: declaring varName 5298: i
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next114.i, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %exitcond116.i = icmp eq i64 %indvars.iv.next114.i, %wide.trip.count123.i, !dbg !149
SUSAN: declaring local:   br i1 %exitcond116.i, label %for.cond34.preheader.i.loopexit, label %for.cond15.preheader.i, !dbg !116, !llvm.loop !150
SUSAN: declaring local:   %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
SUSAN: declaring varName 5298: i
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv105.i, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
SUSAN: declaring local:   %15 = trunc i64 %indvars.iv105.i to i32, !dbg !136
SUSAN: declaring local:   %conv42.i = sitofp i32 %15 to double, !dbg !136
SUSAN: declaring local:   %16 = mul nuw nsw i64 %indvars.iv105.i, %7, !dbg !136
SUSAN: declaring local:   %arrayidx48.i = getelementptr inbounds double, double* %6, i64 %16, !dbg !136
SUSAN: declaring local:   br label %for.body41.i, !dbg !152
SUSAN: declaring local:   %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
SUSAN: declaring varName 5298: j
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %17 = trunc i64 %indvars.iv.i to i32, !dbg !153
SUSAN: declaring local:   %conv43.i = sitofp i32 %17 to double, !dbg !153
SUSAN: declaring local:   %mul44.i = fmul double %conv42.i, %conv43.i, !dbg !154
SUSAN: declaring local:   %div46.i = fdiv double %mul44.i, %conv45.i, !dbg !155
SUSAN: declaring local:   %arrayidx50.i = getelementptr inbounds double, double* %arrayidx48.i, i64 %indvars.iv.i, !dbg !156
SUSAN: declaring local:   store double %div46.i, double* %arrayidx50.i, align 8, !dbg !157, !tbaa !122
SUSAN: declaring local:   %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
SUSAN: declaring varName 5298: j
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !100, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %exitcond.i = icmp eq i64 %indvars.iv.next.i, %7, !dbg !159
SUSAN: declaring local:   br i1 %exitcond.i, label %for.inc54.i.loopexit, label %for.body41.i, !dbg !152, !llvm.loop !160
SUSAN: declaring local:   br label %for.inc54.i, !dbg !162
SUSAN: declaring local:   %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
SUSAN: declaring varName 5298: i
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next106.i, metadata !99, metadata !DIExpression()), !dbg !101
SUSAN: declaring local:   %exitcond108.i = icmp eq i64 %indvars.iv.next106.i, %8, !dbg !132
SUSAN: declaring local:   br i1 %exitcond108.i, label %init_array.exit.loopexit, label %for.cond38.preheader.i, !dbg !135, !llvm.loop !163
SUSAN: declaring local:   br label %init_array.exit
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !32, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !33, metadata !DIExpression()), !dbg !37
SUSAN: declaring local:   %18 = bitcast i32* %ni.addr.i to i8*
SUSAN: declaring local:   %19 = bitcast i32* %nj.addr.i to i8*
SUSAN: declaring local:   %20 = bitcast i32* %nk.addr.i to i8*
SUSAN: declaring local:   %21 = bitcast double* %alpha.addr.i to i8*
SUSAN: declaring local:   %22 = bitcast double* %beta.addr.i to i8*
SUSAN: declaring local:   %23 = bitcast double** %C.addr.i to i8*
SUSAN: declaring local:   %24 = bitcast double** %A.addr.i to i8*
SUSAN: declaring local:   %25 = bitcast double** %B.addr.i to i8*
SUSAN: declaring local:   %26 = bitcast %struct.ident_t* %.kmpc_loc.addr.i to i8*
SUSAN: declaring local:   %27 = call i8* @memcpy(i8* %26, i8* bitcast (%struct.ident_t* @0 to i8*), i64 16)
SUSAN: declaring varName 5298: _3
SUSAN: declaring   %27 = call i8* @memcpy(i8* %26, i8* bitcast (%struct.ident_t* @0 to i8*), i64 16)
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !165, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   store i32 %conv.i59, i32* %ni.addr.i, align 4, !tbaa !182
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !170, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   store i32 %conv.i61, i32* %nj.addr.i, align 4, !tbaa !182
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !171, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   store i32 %conv.i63, i32* %nk.addr.i, align 4, !tbaa !182
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !172, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   store double 3.241200e+04, double* %alpha.addr.i, align 8, !tbaa !122
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !173, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   store double 2.123000e+03, double* %beta.addr.i, align 8, !tbaa !122
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %4, metadata !174, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   %28 = bitcast double** %C.addr.i to i8**
SUSAN: declaring local:   store i8* %call8, i8** %28, align 8, !tbaa !39
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %5, metadata !175, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   %29 = bitcast double** %A.addr.i to i8**
SUSAN: declaring local:   store i8* %call12, i8** %29, align 8, !tbaa !39
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %6, metadata !176, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   %30 = bitcast double** %B.addr.i to i8**
SUSAN: declaring local:   store i8* %call16, i8** %30, align 8, !tbaa !39
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !165, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   %31 = and i64 %call.i58, 4294967295
SUSAN: declaring varName 5298: _4
SUSAN: declaring   %31 = and i64 %call.i58, 4294967295
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !170, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !171, metadata !DIExpression()) #7, !dbg !180
SUSAN: declaring local:   %32 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !184
SUSAN: declaring local:   store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1, i64 0, i64 0), i8** %32, align 8, !dbg !184, !tbaa !185
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32* %ni.addr.i, metadata !165, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32* %nj.addr.i, metadata !170, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32* %nk.addr.i, metadata !171, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %alpha.addr.i, metadata !172, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %beta.addr.i, metadata !173, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double** %C.addr.i, metadata !174, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double** %A.addr.i, metadata !175, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double** %B.addr.i, metadata !176, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
SUSAN: declaring local:   call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 14, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i64, i64, double**, double*, i32*, double*, i64, i64, double**, i64, i64, double**)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* nonnull %ni.addr.i, i32* nonnull %nj.addr.i, i64 %31, i64 %7, double** nonnull %C.addr.i, double* nonnull %beta.addr.i, i32* nonnull %nk.addr.i, double* nonnull %alpha.addr.i, i64 %31, i64 %8, double** nonnull %A.addr.i, i64 %8, i64 %7, double** nonnull %B.addr.i) #7, !dbg !184
SUSAN: declaring local:   %cmp = icmp eq i32 %conv.i, 1, !dbg !187
SUSAN: declaring local:   br i1 %cmp, label %if.then, label %if.end, !dbg !189
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !190, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !195, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   call void @llvm.dbg.value(metadata double* %4, metadata !196, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 0, metadata !197, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
SUSAN: declaring local:   %cmp226.i = icmp sgt i32 %conv.i61, 0, !dbg !203
SUSAN: declaring local:   br label %for.cond1.preheader.i66, !dbg !201
SUSAN: declaring local:   %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
SUSAN: declaring varName 5298: i
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv31.i, metadata !197, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i32 0, metadata !198, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
SUSAN: declaring local:   %33 = mul nuw nsw i64 %indvars.iv31.i, %7, !dbg !208
SUSAN: declaring local:   %arrayidx.i67 = getelementptr inbounds double, double* %4, i64 %33, !dbg !208
SUSAN: declaring local:   %34 = trunc i64 %indvars.iv31.i to i32, !dbg !210
SUSAN: declaring local:   %mul.i68 = mul nsw i32 %34, %conv.i59, !dbg !210
SUSAN: declaring varName 5298: llvm_cbe_mul_2e_i68
SUSAN: declaring   %mul.i68 = mul nsw i32 %34, %conv.i59, !dbg !210
SUSAN: declaring local:   br label %for.body3.i72, !dbg !207
SUSAN: declaring local:   %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
SUSAN: declaring varName 5298: j
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.i70, metadata !198, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !212, !tbaa !39
SUSAN: declaring local:   %arrayidx5.i = getelementptr inbounds double, double* %arrayidx.i67, i64 %indvars.iv.i70, !dbg !213
SUSAN: declaring local:   %36 = load double, double* %arrayidx5.i, align 8, !dbg !213, !tbaa !122
SUSAN: declaring local:   %call.i71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), double %36) #8, !dbg !214
SUSAN: declaring varName 5298: llvm_cbe_call_2e_i71
SUSAN: declaring   %call.i71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), double %36) #8, !dbg !214
SUSAN: declaring local:   %37 = trunc i64 %indvars.iv.i70 to i32, !dbg !215
SUSAN: declaring local:   %add.i = add nsw i32 %mul.i68, %37, !dbg !215
SUSAN: declaring local:   %rem.i = srem i32 %add.i, 20, !dbg !216
SUSAN: declaring local:   %cmp6.i = icmp eq i32 %rem.i, 0, !dbg !217
SUSAN: declaring local:   br i1 %cmp6.i, label %if.then.i, label %for.inc.i, !dbg !218
SUSAN: declaring local:   %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !219, !tbaa !39
SUSAN: declaring local:   %fputc25.i = call i32 @fputc(i32 10, %struct._IO_FILE* %38) #8, !dbg !220
SUSAN: declaring varName 5298: llvm_cbe_fputc25_2e_i
SUSAN: declaring   %fputc25.i = call i32 @fputc(i32 10, %struct._IO_FILE* %38) #8, !dbg !220
SUSAN: declaring local:   br label %for.inc.i, !dbg !220
SUSAN: declaring local:   %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
SUSAN: declaring varName 5298: j
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i73, metadata !198, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   %exitcond.i74 = icmp eq i64 %indvars.iv.next.i73, %7, !dbg !222
SUSAN: declaring local:   br i1 %exitcond.i74, label %for.inc8.i75.loopexit, label %for.body3.i72, !dbg !207, !llvm.loop !223
SUSAN: declaring local:   br label %for.inc8.i75, !dbg !225
SUSAN: declaring local:   %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
SUSAN: declaring varName 5298: i
SUSAN: declaring local:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next32.i, metadata !197, metadata !DIExpression()) #7, !dbg !199
SUSAN: declaring local:   %exitcond34.i = icmp eq i64 %indvars.iv.next32.i, %31, !dbg !226
SUSAN: declaring local:   br i1 %exitcond34.i, label %print_array.exit.loopexit, label %for.cond1.preheader.i66, !dbg !201, !llvm.loop !227
SUSAN: declaring local:   br label %print_array.exit, !dbg !229
SUSAN: declaring local:   %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !229, !tbaa !39
SUSAN: declaring local:   %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #8, !dbg !230
SUSAN: declaring varName 5298: llvm_cbe_fputc_2e_i
SUSAN: declaring   %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #8, !dbg !230
SUSAN: declaring local:   br label %if.end, !dbg !231
SUSAN: declaring local:   call void @free(i8* %call8) #7, !dbg !232
SUSAN: declaring local:   call void @free(i8* %call12) #7, !dbg !233
SUSAN: declaring local:   call void @free(i8* %call16) #7, !dbg !234
SUSAN: declaring local:   ret i32 0, !dbg !235
SUSAN: printing bb:entry
SUSAN: printing instruction   %call.i = tail call i64 @strtol(i8* nocapture nonnull %0, i8** null, i32 10) #7, !dbg !52 at 6678
SUSAN: curinstr before loadinst:   %call.i = tail call i64 @strtol(i8* nocapture nonnull %0, i8** null, i32 10) #7, !dbg !52
SUSAN: GEPINST:   %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !38
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !38
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing instruction   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57 at 6678
SUSAN: curinstr before loadinst:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
SUSAN: GEPINST:   %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !54
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !54
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing instruction   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62 at 6678
SUSAN: curinstr before loadinst:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
SUSAN: GEPINST:   %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !59
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !59
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing instruction   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67 at 6678
SUSAN: curinstr before loadinst:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
SUSAN: GEPINST:   %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !64
SUSAN: dereferenceTimes = 2
SUSAN: printing GEP:   %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !64
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing instruction   %mul = shl i64 %call.i58, 32, !dbg !69 at 6678
SUSAN: printing instruction   %call8 = tail call noalias i8* @malloc(i64 %mul7) #7, !dbg !72 at 6678
SUSAN: printing instruction   %call12 = tail call noalias i8* @malloc(i64 %mul11) #7, !dbg !76 at 6678
SUSAN: printing instruction   %call16 = tail call noalias i8* @malloc(i64 %mul15) #7, !dbg !81 at 6678
SUSAN: emitting branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
statically proven dead branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
printing BB in emitIfBlockfor.cond1.preheader.lr.ph.i
printing BB:for.cond1.preheader.lr.ph.iat 7169
SUSAN: emitting branch:   br label %for.cond1.preheader.i, !dbg !106
printing BB in emitIfBlockfor.cond1.preheader.i
SUSAN: printing loop for.cond1.preheader.i at 6677
SUSAN: start printing loop: Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: loop block: for.cond1.preheader.i
SUSAN: loop block: for.body3.lr.ph.i
SUSAN: loop block: for.body3.i
SUSAN: loop block: for.inc8.i.loopexit
SUSAN: loop block: for.inc8.i
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
incr:   %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
SUSAN: printing IV  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
SUSAN: condInst:  %exitcond124.i = icmp eq i64 %indvars.iv.next122.i, %wide.trip.count123.i, !dbg !103
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: skip Block:for.inc8.i
printing BB:for.cond1.preheader.iat 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
statically proven dead branch:   br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
printing BB:for.body3.lr.ph.iat 6187
SUSAN: emitting branch:   br label %for.body3.i, !dbg !110
SUSAN: printing loop for.body3.i at 5753
SUSAN: start printing loop: Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: loop block: for.body3.i
SUSAN: found LP for L:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
incr:   %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
SUSAN: printing IV  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
SUSAN: condInst:  %exitcond120.i = icmp eq i64 %indvars.iv.next118.i, %7, !dbg !125
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 2 containing: %for.body3.i<header><latch><exiting>

printing BB:for.body3.iat 6187
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   store double %div.i, double* %arrayidx7.i, align 8, !dbg !121, !tbaa !122 at 6678
SUSAN: GEPINST:   %arrayidx7.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv117.i, !dbg !120
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx7.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv117.i, !dbg !120
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx.i = getelementptr inbounds double, double* %4, i64 %10, !dbg !107
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i<header>,%for.body3.lr.ph.i,%for.body3.i,%for.inc8.i.loopexit,%for.inc8.i<latch><exiting>
    Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %exitcond120.i, label %for.inc8.i.loopexit, label %for.body3.i, !dbg !110, !llvm.loop !126
printing BB:for.inc8.i.loopexitat 6187
SUSAN: emitting branch:   br label %for.inc8.i, !dbg !128
SUSAN: printing instruction:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next122.i, metadata !99, metadata !DIExpression()), !dbg !101 at 6198
SUSAN: printing instruction   call void @llvm.dbg.value(metadata i64 %indvars.iv.next122.i, metadata !99, metadata !DIExpression()), !dbg !101 at 6003
SUSAN: did omp_SkipVals skips my inst?
printing BB in emitIfBlockfor.inc8.i
printing BB:for.inc8.iat 7164
SUSAN: BB already printed (could be a bug)
for.inc8.i:                                       ; preds = %for.inc8.i.loopexit, %for.cond1.preheader.i
  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next122.i, metadata !99, metadata !DIExpression()), !dbg !101
  %exitcond124.i = icmp eq i64 %indvars.iv.next122.i, %wide.trip.count123.i, !dbg !103
  br i1 %exitcond124.i, label %for.cond15.preheader.lr.ph.i, label %for.cond1.preheader.i, !dbg !106, !llvm.loop !129

printing BB in emitIfBlockfor.cond15.preheader.lr.ph.i
printing BB:for.cond15.preheader.lr.ph.iat 7169
SUSAN: emitting branch:   br label %for.cond15.preheader.i, !dbg !116
printing BB in emitIfBlockfor.cond15.preheader.i
SUSAN: printing loop for.cond15.preheader.i at 6677
SUSAN: start printing loop: Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: loop block: for.cond15.preheader.i
SUSAN: loop block: for.body18.lr.ph.i
SUSAN: loop block: for.body18.i
SUSAN: loop block: for.inc31.i.loopexit
SUSAN: loop block: for.inc31.i
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
incr:   %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
SUSAN: printing IV  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
SUSAN: condInst:  %exitcond116.i = icmp eq i64 %indvars.iv.next114.i, %wide.trip.count123.i, !dbg !149
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: skip Block:for.inc31.i
printing BB:for.cond15.preheader.iat 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
statically proven dead branch:   br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
printing BB:for.body18.lr.ph.iat 6187
SUSAN: emitting branch:   br label %for.body18.i, !dbg !131
SUSAN: printing loop for.body18.i at 5753
SUSAN: start printing loop: Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: loop block: for.body18.i
SUSAN: found LP for L:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
incr:   %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
SUSAN: printing IV  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
SUSAN: condInst:  %exitcond112.i = icmp eq i64 %indvars.iv.next110.i, %8, !dbg !145
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 2 containing: %for.body18.i<header><latch><exiting>

printing BB:for.body18.iat 6187
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   store double %div23.i, double* %arrayidx27.i, align 8, !dbg !143, !tbaa !122 at 6678
SUSAN: GEPINST:   %arrayidx27.i = getelementptr inbounds double, double* %arrayidx25.i, i64 %indvars.iv109.i, !dbg !142
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx27.i = getelementptr inbounds double, double* %arrayidx25.i, i64 %indvars.iv109.i, !dbg !142
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx25.i = getelementptr inbounds double, double* %5, i64 %13, !dbg !111
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %exitcond112.i, label %for.inc31.i.loopexit, label %for.body18.i, !dbg !131, !llvm.loop !146
printing BB:for.inc31.i.loopexitat 6187
SUSAN: emitting branch:   br label %for.inc31.i, !dbg !148
SUSAN: printing instruction:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next114.i, metadata !99, metadata !DIExpression()), !dbg !101 at 6198
SUSAN: printing instruction   call void @llvm.dbg.value(metadata i64 %indvars.iv.next114.i, metadata !99, metadata !DIExpression()), !dbg !101 at 6003
SUSAN: did omp_SkipVals skips my inst?
printing BB in emitIfBlockfor.inc31.i
printing BB:for.inc31.iat 7164
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond15.preheader.i<header>,%for.body18.lr.ph.i,%for.body18.i,%for.inc31.i.loopexit,%for.inc31.i<latch><exiting>
    Loop at depth 2 containing: %for.body18.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %exitcond116.i, label %for.cond34.preheader.i.loopexit, label %for.cond15.preheader.i, !dbg !116, !llvm.loop !150
printing BB in emitIfBlockfor.cond34.preheader.i.loopexit
printing BB:for.cond34.preheader.i.loopexitat 7169
SUSAN: emitting branch:   br label %for.cond34.preheader.i, !dbg !132
SUSAN: printing bb:for.cond1.preheader.lr.ph.i
SUSAN: BB already printed (could be a bug)
for.cond1.preheader.lr.ph.i:                      ; preds = %entry
  %cmp2100.i = icmp sgt i32 %conv.i61, 0, !dbg !107
  %conv5.i = sitofp i32 %conv.i59 to double, !dbg !107
  %wide.trip.count123.i = and i64 %call.i58, 4294967295, !dbg !103
  br label %for.cond1.preheader.i, !dbg !106

SUSAN: br:  br label %for.cond1.preheader.i, !dbg !106
SUSAN: br:  br label %for.body3.i, !dbg !110
SUSAN: br:  br i1 %exitcond120.i, label %for.inc8.i.loopexit, label %for.body3.i, !dbg !110, !llvm.loop !126
SUSAN: br:  br label %for.inc8.i, !dbg !128
SUSAN: br:  br i1 %exitcond124.i, label %for.cond15.preheader.lr.ph.i, label %for.cond1.preheader.i, !dbg !106, !llvm.loop !129
SUSAN: printing bb:for.cond15.preheader.lr.ph.i
SUSAN: BB already printed (could be a bug)
for.cond15.preheader.lr.ph.i:                     ; preds = %for.inc8.i
  call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
  %cmp1695.i = icmp sgt i32 %conv.i63, 0, !dbg !111
  br label %for.cond15.preheader.i, !dbg !116

SUSAN: br:  br label %for.cond15.preheader.i, !dbg !116
SUSAN: br:  br label %for.body18.i, !dbg !131
SUSAN: br:  br i1 %exitcond112.i, label %for.inc31.i.loopexit, label %for.body18.i, !dbg !131, !llvm.loop !146
SUSAN: br:  br label %for.inc31.i, !dbg !148
SUSAN: br:  br i1 %exitcond116.i, label %for.cond34.preheader.i.loopexit, label %for.cond15.preheader.i, !dbg !116, !llvm.loop !150
SUSAN: printing bb:for.cond34.preheader.i.loopexit
SUSAN: BB already printed (could be a bug)
for.cond34.preheader.i.loopexit:                  ; preds = %for.inc31.i
  br label %for.cond34.preheader.i, !dbg !132

SUSAN: br:  br label %for.cond34.preheader.i, !dbg !132
SUSAN: printing bb:for.cond34.preheader.i
SUSAN: emitting branch:   br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
statically proven dead branch:   br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
printing BB in emitIfBlockfor.cond38.preheader.lr.ph.i
printing BB:for.cond38.preheader.lr.ph.iat 7169
SUSAN: emitting branch:   br label %for.cond38.preheader.i, !dbg !135
printing BB in emitIfBlockfor.cond38.preheader.i
SUSAN: printing loop for.cond38.preheader.i at 6677
SUSAN: start printing loop: Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: loop block: for.cond38.preheader.i
SUSAN: loop block: for.body41.lr.ph.i
SUSAN: loop block: for.body41.i
SUSAN: loop block: for.inc54.i.loopexit
SUSAN: loop block: for.inc54.i
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub:   %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
incr:   %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
SUSAN: printing IV  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
SUSAN: condInst:  %exitcond108.i = icmp eq i64 %indvars.iv.next106.i, %8, !dbg !132
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: skip Block:for.inc54.i
printing BB:for.cond38.preheader.iat 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
statically proven dead branch:   br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
printing BB:for.body41.lr.ph.iat 6187
SUSAN: emitting branch:   br label %for.body41.i, !dbg !152
SUSAN: printing loop for.body41.i at 5753
SUSAN: start printing loop: Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: loop block: for.body41.i
SUSAN: found LP for L:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
incr:   %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
SUSAN: printing IV  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
SUSAN: condInst:  %exitcond.i = icmp eq i64 %indvars.iv.next.i, %7, !dbg !159
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 2 containing: %for.body41.i<header><latch><exiting>

printing BB:for.body41.iat 6187
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   store double %div46.i, double* %arrayidx50.i, align 8, !dbg !157, !tbaa !122 at 6678
SUSAN: GEPINST:   %arrayidx50.i = getelementptr inbounds double, double* %arrayidx48.i, i64 %indvars.iv.i, !dbg !156
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx50.i = getelementptr inbounds double, double* %arrayidx48.i, i64 %indvars.iv.i, !dbg !156
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx48.i = getelementptr inbounds double, double* %6, i64 %16, !dbg !136
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %exitcond.i, label %for.inc54.i.loopexit, label %for.body41.i, !dbg !152, !llvm.loop !160
printing BB:for.inc54.i.loopexitat 6187
SUSAN: emitting branch:   br label %for.inc54.i, !dbg !162
SUSAN: printing instruction:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next106.i, metadata !99, metadata !DIExpression()), !dbg !101 at 6198
SUSAN: printing instruction   call void @llvm.dbg.value(metadata i64 %indvars.iv.next106.i, metadata !99, metadata !DIExpression()), !dbg !101 at 6003
SUSAN: did omp_SkipVals skips my inst?
printing BB in emitIfBlockfor.inc54.i
printing BB:for.inc54.iat 7164
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond38.preheader.i<header>,%for.body41.lr.ph.i,%for.body41.i,%for.inc54.i.loopexit,%for.inc54.i<latch><exiting>
    Loop at depth 2 containing: %for.body41.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %exitcond108.i, label %init_array.exit.loopexit, label %for.cond38.preheader.i, !dbg !135, !llvm.loop !163
printing BB in emitIfBlockinit_array.exit.loopexit
printing BB:init_array.exit.loopexitat 7169
SUSAN: emitting branch:   br label %init_array.exit
SUSAN: printing bb:for.cond38.preheader.lr.ph.i
SUSAN: BB already printed (could be a bug)
for.cond38.preheader.lr.ph.i:                     ; preds = %for.cond34.preheader.i
  %cmp3990.i = icmp sgt i32 %conv.i61, 0, !dbg !136
  %conv45.i = sitofp i32 %conv.i59 to double, !dbg !136
  br label %for.cond38.preheader.i, !dbg !135

SUSAN: br:  br label %for.cond38.preheader.i, !dbg !135
SUSAN: br:  br label %for.body41.i, !dbg !152
SUSAN: br:  br i1 %exitcond.i, label %for.inc54.i.loopexit, label %for.body41.i, !dbg !152, !llvm.loop !160
SUSAN: br:  br label %for.inc54.i, !dbg !162
SUSAN: br:  br i1 %exitcond108.i, label %init_array.exit.loopexit, label %for.cond38.preheader.i, !dbg !135, !llvm.loop !163
SUSAN: printing bb:init_array.exit.loopexit
SUSAN: BB already printed (could be a bug)
init_array.exit.loopexit:                         ; preds = %for.inc54.i
  br label %init_array.exit

SUSAN: br:  br label %init_array.exit
SUSAN: printing bb:init_array.exit
SUSAN: printing instruction   %27 = call i8* @memcpy(i8* %26, i8* bitcast (%struct.ident_t* @0 to i8*), i64 16) at 6678
SUSAN: printing instruction   store i32 %conv.i59, i32* %ni.addr.i, align 4, !tbaa !182 at 6678
SUSAN: printing instruction   store i32 %conv.i61, i32* %nj.addr.i, align 4, !tbaa !182 at 6678
SUSAN: printing instruction   store i32 %conv.i63, i32* %nk.addr.i, align 4, !tbaa !182 at 6678
SUSAN: printing instruction   store double 3.241200e+04, double* %alpha.addr.i, align 8, !tbaa !122 at 6678
SUSAN: printing instruction   store double 2.123000e+03, double* %beta.addr.i, align 8, !tbaa !122 at 6678
SUSAN: printing instruction   store i8* %call8, i8** %28, align 8, !tbaa !39 at 6678
SUSAN: printing instruction   store i8* %call12, i8** %29, align 8, !tbaa !39 at 6678
SUSAN: printing instruction   store i8* %call16, i8** %30, align 8, !tbaa !39 at 6678
SUSAN: printing instruction   store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1, i64 0, i64 0), i8** %32, align 8, !dbg !184, !tbaa !185 at 6678
SUSAN: GEPINST:   %32 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !184
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %32 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !184
SUSAN: accessMemory true
SUSAN: first index is struct or array type
SUSAN: first index is struct or array type
SUSAN: printing instruction   call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 14, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i64, i64, double**, double*, i32*, double*, i64, i64, double**, i64, i64, double**)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* nonnull %ni.addr.i, i32* nonnull %nj.addr.i, i64 %31, i64 %7, double** nonnull %C.addr.i, double* nonnull %beta.addr.i, i32* nonnull %nk.addr.i, double* nonnull %alpha.addr.i, i64 %31, i64 %8, double** nonnull %A.addr.i, i64 %8, i64 %7, double** nonnull %B.addr.i) #7, !dbg !184 at 6678
SUSAN: found emptytype:   call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 14, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i64, i64, double**, double*, i32*, double*, i64, i64, double**, i64, i64, double**)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* nonnull %ni.addr.i, i32* nonnull %nj.addr.i, i64 %31, i64 %7, double** nonnull %C.addr.i, double* nonnull %beta.addr.i, i32* nonnull %nk.addr.i, double* nonnull %alpha.addr.i, i64 %31, i64 %8, double** nonnull %A.addr.i, i64 %8, i64 %7, double** nonnull %B.addr.i) #7, !dbg !184
SUSAN: emitting branch:   br i1 %cmp, label %if.then, label %if.end, !dbg !189
printing BB in emitIfBlockif.then
printing BB:if.thenat 7169
SUSAN: emitting branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
statically proven dead branch:   br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
printing BB in emitIfBlockfor.cond1.preheader.lr.ph.i65
printing BB:for.cond1.preheader.lr.ph.i65at 7169
SUSAN: emitting branch:   br label %for.cond1.preheader.i66, !dbg !201
printing BB in emitIfBlockfor.cond1.preheader.i66
SUSAN: printing loop for.cond1.preheader.i66 at 6677
SUSAN: start printing loop: Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: loop block: for.cond1.preheader.i66
SUSAN: loop block: for.body3.lr.ph.i69
SUSAN: loop block: for.body3.i72
SUSAN: loop block: if.then.i
SUSAN: loop block: for.inc.i
SUSAN: loop block: for.inc8.i75.loopexit
SUSAN: loop block: for.inc8.i75
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub:   %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
incr:   %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
SUSAN: printing IV  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
SUSAN: condInst:  %exitcond34.i = icmp eq i64 %indvars.iv.next32.i, %31, !dbg !226
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: skip Block:for.inc8.i75
printing BB:for.cond1.preheader.i66at 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
statically proven dead branch:   br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
printing BB:for.body3.lr.ph.i69at 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %mul.i68 = mul nsw i32 %34, %conv.i59, !dbg !210 at 6678
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br label %for.body3.i72, !dbg !207
SUSAN: printing loop for.body3.i72 at 5753
SUSAN: start printing loop: Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: loop block: for.body3.i72
SUSAN: loop block: if.then.i
SUSAN: loop block: for.inc.i
SUSAN: found LP for L:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub:   %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
incr:   %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
SUSAN: printing IV  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
SUSAN: condInst:  %exitcond.i74 = icmp eq i64 %indvars.iv.next.i73, %7, !dbg !222
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: skip Block:for.inc.i
printing BB:for.body3.i72at 6187
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %call.i71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), double %36) #8, !dbg !214 at 6678
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %call.i71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), double %36) #8, !dbg !214
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: first index is struct or array type
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !212, !tbaa !39
SUSAN: GEPINST:   %arrayidx5.i = getelementptr inbounds double, double* %arrayidx.i67, i64 %indvars.iv.i70, !dbg !213
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx5.i = getelementptr inbounds double, double* %arrayidx.i67, i64 %indvars.iv.i70, !dbg !213
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx.i67 = getelementptr inbounds double, double* %4, i64 %33, !dbg !208
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %cmp6.i, label %if.then.i, label %for.inc.i, !dbg !218
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
printing BB in emitIfBlockif.then.i
printing BB:if.then.iat 7164
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %fputc25.i = call i32 @fputc(i32 10, %struct._IO_FILE* %38) #8, !dbg !220 at 6678
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %fputc25.i = call i32 @fputc(i32 10, %struct._IO_FILE* %38) #8, !dbg !220
trying to get IV for Loop:Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br label %for.inc.i, !dbg !220
printing BB:if.then.iat 6187
SUSAN: BB already printed (could be a bug)
if.then.i:                                        ; preds = %for.body3.i72
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !219, !tbaa !39
  %fputc25.i = call i32 @fputc(i32 10, %struct._IO_FILE* %38) #8, !dbg !220
  br label %for.inc.i, !dbg !220

SUSAN: printing instruction:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i73, metadata !198, metadata !DIExpression()) #7, !dbg !199 at 6198
SUSAN: printing instruction   call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i73, metadata !198, metadata !DIExpression()) #7, !dbg !199 at 6003
SUSAN: did omp_SkipVals skips my inst?
printing BB:for.inc8.i75.loopexitat 6187
SUSAN: emitting branch:   br label %for.inc8.i75, !dbg !225
SUSAN: printing instruction:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next32.i, metadata !197, metadata !DIExpression()) #7, !dbg !199 at 6198
SUSAN: printing instruction   call void @llvm.dbg.value(metadata i64 %indvars.iv.next32.i, metadata !197, metadata !DIExpression()) #7, !dbg !199 at 6003
SUSAN: did omp_SkipVals skips my inst?
printing BB in emitIfBlockfor.inc8.i75
printing BB:for.inc8.i75at 7164
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond1.preheader.i66<header>,%for.body3.lr.ph.i69,%for.body3.i72,%if.then.i,%for.inc.i,%for.inc8.i75.loopexit,%for.inc8.i75<latch><exiting>
    Loop at depth 2 containing: %for.body3.i72<header>,%if.then.i,%for.inc.i<latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %exitcond34.i, label %print_array.exit.loopexit, label %for.cond1.preheader.i66, !dbg !201, !llvm.loop !227
printing BB in emitIfBlockprint_array.exit.loopexit
printing BB:print_array.exit.loopexitat 7169
SUSAN: emitting branch:   br label %print_array.exit, !dbg !229
printing BB in emitIfBlockprint_array.exit
printing BB:print_array.exitat 7169
SUSAN: printing instruction   %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #8, !dbg !230 at 6678
SUSAN: curinstr before loadinst:   %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #8, !dbg !230
SUSAN: emitting branch:   br label %if.end, !dbg !231
printing BB in emitIfBlockif.end
printing BB:if.endat 7169
SUSAN: printing instruction   call void @free(i8* %call8) #7, !dbg !232 at 6678
SUSAN: found emptytype:   call void @free(i8* %call8) #7, !dbg !232
SUSAN: printing instruction   call void @free(i8* %call12) #7, !dbg !233 at 6678
SUSAN: found emptytype:   call void @free(i8* %call12) #7, !dbg !233
SUSAN: printing instruction   call void @free(i8* %call16) #7, !dbg !234 at 6678
SUSAN: found emptytype:   call void @free(i8* %call16) #7, !dbg !234
SUSAN: br:  br i1 %cmp, label %if.then, label %if.end, !dbg !189
SUSAN: printing bb:if.then
SUSAN: BB already printed (could be a bug)
if.then:                                          ; preds = %init_array.exit
  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !190, metadata !DIExpression()) #7, !dbg !199
  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !195, metadata !DIExpression()) #7, !dbg !199
  call void @llvm.dbg.value(metadata double* %4, metadata !196, metadata !DIExpression()) #7, !dbg !199
  call void @llvm.dbg.value(metadata i32 0, metadata !197, metadata !DIExpression()) #7, !dbg !199
  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201

SUSAN: printing bb:for.cond1.preheader.lr.ph.i65
SUSAN: BB already printed (could be a bug)
for.cond1.preheader.lr.ph.i65:                    ; preds = %if.then
  %cmp226.i = icmp sgt i32 %conv.i61, 0, !dbg !203
  br label %for.cond1.preheader.i66, !dbg !201

SUSAN: br:  br label %for.cond1.preheader.i66, !dbg !201
SUSAN: br:  br label %for.body3.i72, !dbg !207
SUSAN: br:  br i1 %cmp6.i, label %if.then.i, label %for.inc.i, !dbg !218
SUSAN: br:  br label %for.inc.i, !dbg !220
SUSAN: br:  br i1 %exitcond.i74, label %for.inc8.i75.loopexit, label %for.body3.i72, !dbg !207, !llvm.loop !223
SUSAN: br:  br label %for.inc8.i75, !dbg !225
SUSAN: br:  br i1 %exitcond34.i, label %print_array.exit.loopexit, label %for.cond1.preheader.i66, !dbg !201, !llvm.loop !227
SUSAN: printing bb:print_array.exit.loopexit
SUSAN: BB already printed (could be a bug)
print_array.exit.loopexit:                        ; preds = %for.inc8.i75
  br label %print_array.exit, !dbg !229

SUSAN: br:  br label %print_array.exit, !dbg !229
SUSAN: printing bb:print_array.exit
SUSAN: printing instruction   %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #8, !dbg !230 at 6678
SUSAN: curinstr before loadinst:   %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #8, !dbg !230
SUSAN: emitting branch:   br label %if.end, !dbg !231
SUSAN: br:  br label %if.end, !dbg !231
SUSAN: printing bb:if.end
SUSAN: printing instruction   call void @free(i8* %call8) #7, !dbg !232 at 6678
SUSAN: found emptytype:   call void @free(i8* %call8) #7, !dbg !232
SUSAN: printing instruction   call void @free(i8* %call12) #7, !dbg !233 at 6678
SUSAN: found emptytype:   call void @free(i8* %call12) #7, !dbg !233
SUSAN: printing instruction   call void @free(i8* %call16) #7, !dbg !234 at 6678
SUSAN: found emptytype:   call void @free(i8* %call16) #7, !dbg !234
SUSAN: trying to get exit for loop: Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN exitBB: 
omp.inner.for.inc.i:                              ; preds = %omp.inner.for.inc.i.loopexit, %for.cond.preheader.i
  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next11.i, metadata !70, metadata !DIExpression()) #7, !dbg !91
  call void @llvm.dbg.value(metadata i32 %cond.i, metadata !76, metadata !DIExpression()) #7, !dbg !91
  %cmp16.i = icmp slt i64 %indvars.iv10.i, %15, !dbg !92
  br i1 %cmp16.i, label %for.cond.preheader.i, label %omp.loop.exit.i.loopexit, !dbg !93, !llvm.loop !128

SUSAN: trying to get exit for loop: Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN exitBB: 
for.inc40.i:                                      ; preds = %for.inc40.i.loopexit, %for.body.i
  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next9.i, metadata !79, metadata !DIExpression()) #7, !dbg !91
  %exitcond.i = icmp eq i64 %indvars.iv.next9.i, %wide.trip.count.i, !dbg !125
  br i1 %exitcond.i, label %omp.inner.for.inc.i.loopexit, label %for.body.i, !dbg !107, !llvm.loop !126

SUSAN: trying to get exit for loop: Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN exitBB: 
for.body24.i:                                     ; preds = %for.body24.i, %for.body24.lr.ph.i
  %24 = phi double [ %mul21.i, %for.body24.lr.ph.i ], [ %add39.i, %for.body24.i ], !dbg !114
  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !80, metadata !DIExpression()) #7, !dbg !91
  %25 = load double, double* %alpha, align 8, !dbg !115, !tbaa !109, !noalias !88
  %arrayidx28.i = getelementptr inbounds double, double* %arrayidx26.i, i64 %indvars.iv.i, !dbg !116
  %26 = load double, double* %arrayidx28.i, align 8, !dbg !116, !tbaa !109, !noalias !88
  %mul29.i = fmul double %25, %26, !dbg !117
  %27 = mul nsw i64 %indvars.iv.i, %vla9, !dbg !118
  %arrayidx33.i = getelementptr inbounds double, double* %arrayidx31.i, i64 %27, !dbg !118
  %28 = load double, double* %arrayidx33.i, align 8, !dbg !118, !tbaa !109, !noalias !88
  %mul34.i = fmul double %mul29.i, %28, !dbg !119
  %add39.i = fadd double %24, %mul34.i, !dbg !114
  store double %add39.i, double* %arrayidx20.i, align 8, !dbg !114, !tbaa !109, !noalias !88
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !80, metadata !DIExpression()) #7, !dbg !91
  %cmp23.i = icmp slt i64 %indvars.iv.next.i, %21, !dbg !121
  br i1 %cmp23.i, label %for.body24.i, label %for.inc40.i.loopexit, !dbg !113, !llvm.loop !122

creating subregion: entry
=================SUSAN: START OF marking region : entry==================
creating subregion: omp.precond.then.i
=================SUSAN: START OF marking region : omp.precond.then.i==================
creating subregion: for.cond.preheader.i
=================SUSAN: START OF marking region : for.cond.preheader.i==================
creating subregion: for.body.i
=================SUSAN: START OF marking region : for.body.i==================
SUSAN: found latchfor.body24.i
=================SUSAN: END OF marking region : for.body.i==================
SUSAN: found latchfor.inc40.i
SUSAN: found latchfor.body24.i
=================SUSAN: END OF marking region : for.cond.preheader.i==================
SUSAN: found latchomp.inner.for.inc.i
SUSAN: found latchfor.inc40.i
=================SUSAN: END OF marking region : omp.precond.then.i==================
=================SUSAN: END OF marking region : entry==================
SUSAN: found latchomp.inner.for.inc.i
SUSAN: found latchfor.inc40.i
SUSAN: found latchfor.body24.i
SUSAN: found latchomp.inner.for.inc.i
SUSAN: found latchfor.inc40.i
SUSAN: Node: topRegion
then SubNodes: 
entry
for.cond34.preheader.i
init_array.exit
entry
else SubNodes: 
current region then bbs:
entry
for.cond34.preheader.i
init_array.exit
if.end
for.inc54.i
print_array.exit
for.inc31.i
for.inc8.i75
entry
omp.loop.exit.i
omp.inner.for.inc.i
for.inc40.i
current region else bbs:
current region then edges:
entry -> for.cond34.preheader.i
for.cond34.preheader.i -> init_array.exit
init_array.exit -> if.end
init_array.exit.loopexit -> init_array.exit
for.inc54.i.loopexit -> for.inc54.i
for.cond34.preheader.i.loopexit -> for.cond34.preheader.i
print_array.exit.loopexit -> print_array.exit
for.inc31.i.loopexit -> for.inc31.i
for.inc8.i75.loopexit -> for.inc8.i75
omp.loop.exit.i.loopexit -> omp.loop.exit.i
omp.inner.for.inc.i.loopexit -> omp.inner.for.inc.i
for.inc40.i.loopexit -> for.inc40.i
current region else edges:
SUSAN: Node entry
then SubNodes: 
for.cond1.preheader.i
for.cond15.preheader.i
else SubNodes: 
current region then bbs:
for.cond1.preheader.lr.ph.i
for.cond1.preheader.i
for.inc8.i
for.cond15.preheader.lr.ph.i
for.cond15.preheader.i
for.inc31.i
for.cond34.preheader.i.loopexit
current region else bbs:
current region then edges:
entry -> for.cond1.preheader.lr.ph.i
for.cond1.preheader.lr.ph.i -> for.cond1.preheader.i
for.cond1.preheader.i -> for.inc8.i
for.inc8.i -> for.cond15.preheader.lr.ph.i
for.cond15.preheader.lr.ph.i -> for.cond15.preheader.i
for.inc8.i.loopexit -> for.inc8.i
for.cond15.preheader.i -> for.inc31.i
for.inc31.i -> for.cond34.preheader.i.loopexit
current region else edges:
SUSAN: Node for.cond34.preheader.i
then SubNodes: 
for.cond38.preheader.i
else SubNodes: 
current region then bbs:
for.cond38.preheader.lr.ph.i
for.cond38.preheader.i
for.inc54.i
init_array.exit.loopexit
current region else bbs:
current region then edges:
for.cond34.preheader.i -> for.cond38.preheader.lr.ph.i
for.cond38.preheader.lr.ph.i -> for.cond38.preheader.i
for.cond38.preheader.i -> for.inc54.i
for.inc54.i -> init_array.exit.loopexit
current region else edges:
SUSAN: Node init_array.exit
then SubNodes: 
if.then
else SubNodes: 
current region then bbs:
if.then
print_array.exit
if.end
current region else bbs:
current region then edges:
init_array.exit -> if.then
if.then -> print_array.exit
print_array.exit -> if.end
current region else edges:
SUSAN: Node entry
then SubNodes: 
else SubNodes: 
omp.precond.then.i
current region then bbs:
entry.omp.precond.end_crit_edge.i
.omp_outlined._debug__.exit
current region else bbs:
omp.precond.then.i
omp.loop.exit.i
.omp_outlined._debug__.exit
current region then edges:
entry -> entry.omp.precond.end_crit_edge.i
entry.omp.precond.end_crit_edge.i -> .omp_outlined._debug__.exit
current region else edges:
entry -> omp.precond.then.i
omp.precond.then.i -> omp.loop.exit.i
omp.loop.exit.i -> .omp_outlined._debug__.exit
SUSAN: Node for.cond1.preheader.i
then SubNodes: 
else SubNodes: 
current region then bbs:
for.body3.lr.ph.i
for.body3.i
for.inc8.i.loopexit
current region else bbs:
current region then edges:
for.cond1.preheader.i -> for.body3.lr.ph.i
for.body3.lr.ph.i -> for.body3.i
for.body3.i -> for.inc8.i.loopexit
current region else edges:
SUSAN: Node for.cond15.preheader.i
then SubNodes: 
else SubNodes: 
current region then bbs:
for.body18.lr.ph.i
for.body18.i
for.inc31.i.loopexit
current region else bbs:
current region then edges:
for.cond15.preheader.i -> for.body18.lr.ph.i
for.body18.lr.ph.i -> for.body18.i
for.body18.i -> for.inc31.i.loopexit
current region else edges:
SUSAN: Node for.cond38.preheader.i
then SubNodes: 
else SubNodes: 
current region then bbs:
for.body41.lr.ph.i
for.body41.i
for.inc54.i.loopexit
current region else bbs:
current region then edges:
for.cond38.preheader.i -> for.body41.lr.ph.i
for.body41.lr.ph.i -> for.body41.i
for.body41.i -> for.inc54.i.loopexit
current region else edges:
SUSAN: Node if.then
then SubNodes: 
for.cond1.preheader.i66
else SubNodes: 
current region then bbs:
for.cond1.preheader.lr.ph.i65
for.cond1.preheader.i66
for.inc8.i75
print_array.exit.loopexit
current region else bbs:
current region then edges:
if.then -> for.cond1.preheader.lr.ph.i65
for.cond1.preheader.lr.ph.i65 -> for.cond1.preheader.i66
for.cond1.preheader.i66 -> for.inc8.i75
for.inc8.i75 -> print_array.exit.loopexit
current region else edges:
SUSAN: Node omp.precond.then.i
then SubNodes: 
for.cond.preheader.i
else SubNodes: 
current region then bbs:
for.cond.preheader.lr.ph.i
for.cond.preheader.i
omp.inner.for.inc.i
omp.loop.exit.i.loopexit
current region else bbs:
current region then edges:
omp.precond.then.i -> for.cond.preheader.lr.ph.i
for.cond.preheader.lr.ph.i -> for.cond.preheader.i
for.cond.preheader.i -> omp.inner.for.inc.i
omp.inner.for.inc.i -> omp.loop.exit.i.loopexit
current region else edges:
SUSAN: Node for.cond1.preheader.i66
then SubNodes: 
for.body3.i72
else SubNodes: 
current region then bbs:
for.body3.lr.ph.i69
for.body3.i72
for.inc.i
for.inc8.i75.loopexit
current region else bbs:
current region then edges:
for.cond1.preheader.i66 -> for.body3.lr.ph.i69
for.body3.lr.ph.i69 -> for.body3.i72
for.body3.i72 -> for.inc.i
if.then.i -> for.inc.i
for.inc.i -> for.inc8.i75.loopexit
current region else edges:
SUSAN: Node for.cond.preheader.i
then SubNodes: 
for.body.i
else SubNodes: 
current region then bbs:
for.body.lr.ph.i
for.body.i
for.inc40.i
omp.inner.for.inc.i.loopexit
current region else bbs:
current region then edges:
for.cond.preheader.i -> for.body.lr.ph.i
for.body.lr.ph.i -> for.body.i
for.body.i -> for.inc40.i
for.inc40.i -> omp.inner.for.inc.i.loopexit
current region else edges:
SUSAN: Node for.body3.i72
then SubNodes: 
else SubNodes: 
current region then bbs:
if.then.i
current region else bbs:
current region then edges:
for.body3.i72 -> if.then.i
current region else edges:
SUSAN: Node for.body.i
then SubNodes: 
else SubNodes: 
current region then bbs:
for.body24.lr.ph.i
for.body24.i
for.inc40.i.loopexit
current region else bbs:
current region then edges:
for.body.i -> for.body24.lr.ph.i
for.body24.lr.ph.i -> for.body24.i
for.body24.i -> for.inc40.i.loopexit
current region else edges:
SUSAN: BB entry times2bePrinted: 1
SUSAN: BB entry.omp.precond.end_crit_edge.i times2bePrinted: 1
SUSAN: BB omp.precond.then.i times2bePrinted: 1
SUSAN: BB for.cond.preheader.lr.ph.i times2bePrinted: 1
SUSAN: BB for.cond.preheader.i times2bePrinted: 1
SUSAN: BB for.body.lr.ph.i times2bePrinted: 1
SUSAN: BB for.body.i times2bePrinted: 1
SUSAN: BB for.body24.lr.ph.i times2bePrinted: 1
SUSAN: BB for.body24.i times2bePrinted: 1
SUSAN: BB for.inc40.i.loopexit times2bePrinted: 1
SUSAN: BB for.inc40.i times2bePrinted: 2
SUSAN: BB omp.inner.for.inc.i.loopexit times2bePrinted: 1
SUSAN: BB omp.inner.for.inc.i times2bePrinted: 2
SUSAN: BB omp.loop.exit.i.loopexit times2bePrinted: 1
SUSAN: BB omp.loop.exit.i times2bePrinted: 2
SUSAN: BB .omp_outlined._debug__.exit times2bePrinted: 2
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: lbAlloca:   %.omp.lb.i = alloca i32, align 4
SUSAN: omploop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
SUSAN: barrier call!!
SUSAN: skipping omp loop: Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: recording loop as non omp: Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: recording loop as non omp: Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
=========LOOP PROFILES=========
Loop: Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

isomp: 0
ub: i32* %nk
Loop: Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

isomp: 0
ub: i32* %nj
Loop: Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

isomp: 1
ub:   %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
SUSAN: compared val:i32* %ni
SUSAN: loop is: Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

branch:   br i1 %cmp.i, label %omp.precond.then.i, label %entry.omp.precond.end_crit_edge.i, !dbg !93
ub:   %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
lb: i32 0
added br to dead branches 0  br i1 %cmp.i, label %omp.precond.then.i, label %entry.omp.precond.end_crit_edge.i, !dbg !93
SUSAN: compared val:  %.omp.lb.i = alloca i32, align 4
SUSAN: loop is: Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

branch:   br i1 %cmp165.i, label %omp.loop.exit.i, label %for.cond.preheader.lr.ph.i, !dbg !93
ub:   %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
lb: i32 0
SUSAN: compared val:i32* %nj
SUSAN: loop is: Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

branch:   br i1 %cmp183.i, label %for.body.lr.ph.i, label %omp.inner.for.inc.i, !dbg !107
ub: i32* %nj
lb: i64 0
added br to dead branches 0  br i1 %cmp183.i, label %for.body.lr.ph.i, label %omp.inner.for.inc.i, !dbg !107
SUSAN: compared val:i32* %nk
SUSAN: loop is: Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

branch:   br i1 %cmp231.i, label %for.body24.lr.ph.i, label %for.inc40.i, !dbg !113
ub: i32* %nk
lb: i64 0
added br to dead branches 0  br i1 %cmp231.i, label %for.body24.lr.ph.i, label %for.inc40.i, !dbg !113
SUSAN: compared val:  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
SUSAN: finding live-in forfor.body.lr.ph.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding live-in forfor.body.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding live-in forfor.body24.lr.ph.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding live-in forfor.body24.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding live-in forfor.inc40.i.loopexit
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding live-in forfor.inc40.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding live-in foromp.inner.for.inc.i.loopexit
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding live-in for lbi32 0
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: finding live-in for ub  %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
SUSAN: finding liveins for Loopfor.cond.preheader.i
SUSAN: adding to deadInsts  %.omp.lb.i = alloca i32, align 4
SUSAN: adding to deadInsts  %.omp.ub.i = alloca i32, align 4
SUSAN: adding to deadInsts  %.omp.stride.i = alloca i32, align 4
SUSAN: adding to deadInsts  %.omp.is_last.i = alloca i32, align 4
SUSAN: adding to deadInsts  %.kmpc_loc.addr.i = alloca %struct.ident_t, align 8
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %.global_tid., metadata !248, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %.bound_tid., metadata !249, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %ni, metadata !250, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %nj, metadata !251, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla, metadata !252, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla1, metadata !253, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double** %C, metadata !254, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double* %beta, metadata !255, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %nk, metadata !256, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double* %alpha, metadata !257, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla3, metadata !258, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla5, metadata !259, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double** %A, metadata !260, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla7, metadata !261, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla9, metadata !262, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double** %B, metadata !263, metadata !DIExpression()), !dbg !264
SUSAN: adding to deadInsts  %0 = bitcast %struct.ident_t* %.kmpc_loc.addr.i to i8*
SUSAN: adding to deadInsts  %1 = call i8* @memcpy(i8* %0, i8* bitcast (%struct.ident_t* @2 to i8*), i64 24)
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %.global_tid., metadata !265, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* undef, metadata !268, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %ni, metadata !269, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %nj, metadata !270, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 undef, metadata !271, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla1, metadata !272, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double** %C, metadata !273, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double* %beta, metadata !274, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %nk, metadata !275, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double* %alpha, metadata !276, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 undef, metadata !277, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla5, metadata !278, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double** %A, metadata !279, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 undef, metadata !280, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i64 %vla9, metadata !281, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata double** %B, metadata !282, metadata !DIExpression()) #7, !dbg !294
SUSAN: adding to deadInsts  %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 %2, metadata !286, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 %sub12.i, metadata !286, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 0, metadata !287, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  %cmp.i = icmp sgt i32 %2, 0, !dbg !92
SUSAN: adding to deadInsts  br i1 %cmp.i, label %omp.precond.then.i, label %entry.omp.precond.end_crit_edge.i, !dbg !93
SUSAN: adding to deadInsts  %.pre.i = load i32, i32* %.global_tid., align 4, !dbg !94, !tbaa !84, !alias.scope !88
SUSAN: adding to deadInsts  br label %.omp_outlined._debug__.exit, !dbg !93
SUSAN: adding to deadInsts  %3 = bitcast i32* %.omp.lb.i to i8*, !dbg !93
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 0, metadata !288, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  store i32 0, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: adding to deadInsts  %4 = bitcast i32* %.omp.ub.i to i8*, !dbg !93
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 %sub12.i, metadata !289, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  store i32 %sub12.i, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: adding to deadInsts  %5 = bitcast i32* %.omp.stride.i to i8*, !dbg !93
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 1, metadata !290, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  store i32 1, i32* %.omp.stride.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: adding to deadInsts  %6 = bitcast i32* %.omp.is_last.i to i8*, !dbg !93
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 0, metadata !291, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  store i32 0, i32* %.omp.is_last.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: adding to deadInsts  %7 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !93
SUSAN: adding to deadInsts  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @3, i64 0, i64 0), i8** %7, align 8, !dbg !93, !tbaa !96, !noalias !88
SUSAN: adding to deadInsts  %8 = load i32, i32* %.global_tid., align 4, !dbg !93, !tbaa !84, !alias.scope !88
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %.omp.lb.i, metadata !288, metadata !DIExpression(DW_OP_deref)) #7, !dbg !300
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %.omp.ub.i, metadata !289, metadata !DIExpression(DW_OP_deref)) #7, !dbg !300
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %.omp.stride.i, metadata !290, metadata !DIExpression(DW_OP_deref)) #7, !dbg !300
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32* %.omp.is_last.i, metadata !291, metadata !DIExpression(DW_OP_deref)) #7, !dbg !300
SUSAN: adding to deadInsts  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 %8, i32 34, i32* nonnull %.omp.is_last.i, i32* nonnull %.omp.lb.i, i32* nonnull %.omp.ub.i, i32* nonnull %.omp.stride.i, i32 1, i32 1) #7, !dbg !93, !noalias !88
SUSAN: adding to deadInsts  %9 = load i32, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 %9, metadata !289, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  %cmp15.i = icmp slt i32 %9, %2, !dbg !95
SUSAN: adding to deadInsts  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 %cond.i, metadata !289, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  store i32 %cond.i, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: adding to deadInsts  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 %10, metadata !288, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 %10, metadata !283, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  call void @llvm.dbg.value(metadata i32 %cond.i, metadata !289, metadata !DIExpression()) #7, !dbg !300
SUSAN: adding to deadInsts  %cmp165.i = icmp sgt i32 %10, %cond.i, !dbg !92
SUSAN: adding to deadInsts  br i1 %cmp165.i, label %omp.loop.exit.i, label %for.cond.preheader.lr.ph.i, !dbg !93
SUSAN: adding to deadInsts  %11 = load i32, i32* %nj, align 4, !dbg !99, !noalias !88
SUSAN: adding to deadInsts  %cmp183.i = icmp sgt i32 %11, 0, !dbg !99
SUSAN: adding to deadInsts  %12 = load double*, double** %C, align 8, !dbg !102, !noalias !88
SUSAN: adding to deadInsts  %13 = load i32, i32* %nk, align 4, !dbg !104, !noalias !88
SUSAN: adding to deadInsts  %cmp231.i = icmp sgt i32 %13, 0, !dbg !104
SUSAN: adding to deadInsts  %14 = sext i32 %10 to i64, !dbg !93
SUSAN: adding to deadInsts  %15 = sext i32 %cond.i to i64, !dbg !93
SUSAN: adding to deadInsts  %wide.trip.count.i = zext i32 %11 to i64, !dbg !99
SUSAN: adding to deadInsts  br label %for.cond.preheader.i, !dbg !93
nested in omploop:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
nested in omploop:  call void @llvm.dbg.value(metadata i64 %indvars.iv8.i, metadata !292, metadata !DIExpression()) #7, !dbg !300
nested in omploop:  %22 = load double, double* %beta, align 8, !dbg !108, !tbaa !109, !noalias !88
nested in omploop:  %arrayidx20.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv8.i, !dbg !111
nested in omploop:  %23 = load double, double* %arrayidx20.i, align 8, !dbg !112, !tbaa !109, !noalias !88
nested in omploop:  %mul21.i = fmul double %22, %23, !dbg !112
nested in omploop:  store double %mul21.i, double* %arrayidx20.i, align 8, !dbg !112, !tbaa !109, !noalias !88
nested in omploop:  call void @llvm.dbg.value(metadata i32 0, metadata !293, metadata !DIExpression()) #7, !dbg !300
nested in omploop:  br i1 %cmp231.i, label %for.body24.lr.ph.i, label %for.inc40.i, !dbg !113
nested in omploop:  %arrayidx31.i = getelementptr inbounds double, double* %19, i64 %indvars.iv8.i, !dbg !104
nested in omploop:  br label %for.body24.i, !dbg !113
nested in omploop:  %24 = phi double [ %mul21.i, %for.body24.lr.ph.i ], [ %add39.i, %for.body24.i ], !dbg !114
nested in omploop:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
nested in omploop:  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !293, metadata !DIExpression()) #7, !dbg !300
nested in omploop:  %25 = load double, double* %alpha, align 8, !dbg !115, !tbaa !109, !noalias !88
nested in omploop:  %arrayidx28.i = getelementptr inbounds double, double* %arrayidx26.i, i64 %indvars.iv.i, !dbg !116
nested in omploop:  %26 = load double, double* %arrayidx28.i, align 8, !dbg !116, !tbaa !109, !noalias !88
nested in omploop:  %mul29.i = fmul double %25, %26, !dbg !117
nested in omploop:  %27 = mul nsw i64 %indvars.iv.i, %vla9, !dbg !118
nested in omploop:  %arrayidx33.i = getelementptr inbounds double, double* %arrayidx31.i, i64 %27, !dbg !118
nested in omploop:  %28 = load double, double* %arrayidx33.i, align 8, !dbg !118, !tbaa !109, !noalias !88
nested in omploop:  %mul34.i = fmul double %mul29.i, %28, !dbg !119
nested in omploop:  %add39.i = fadd double %24, %mul34.i, !dbg !114
nested in omploop:  store double %add39.i, double* %arrayidx20.i, align 8, !dbg !114, !tbaa !109, !noalias !88
nested in omploop:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
nested in omploop:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !293, metadata !DIExpression()) #7, !dbg !300
nested in omploop:  %cmp23.i = icmp slt i64 %indvars.iv.next.i, %21, !dbg !121
nested in omploop:  br i1 %cmp23.i, label %for.body24.i, label %for.inc40.i.loopexit, !dbg !113, !llvm.loop !122
nested in omploop:  br label %for.inc40.i, !dbg !124
nested in omploop:  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
nested in omploop:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next9.i, metadata !292, metadata !DIExpression()) #7, !dbg !300
nested in omploop:  %exitcond.i = icmp eq i64 %indvars.iv.next9.i, %wide.trip.count.i, !dbg !125
nested in omploop:  br i1 %exitcond.i, label %omp.inner.for.inc.i.loopexit, label %for.body.i, !dbg !107, !llvm.loop !126
SUSAN: adding to deadInsts  br label %omp.loop.exit.i, !dbg !129
SUSAN: adding to deadInsts  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @4, i64 0, i64 0), i8** %7, align 8, !dbg !129, !tbaa !96, !noalias !88
SUSAN: adding to deadInsts  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 %8) #7, !dbg !129, !noalias !88
SUSAN: adding to deadInsts  br label %.omp_outlined._debug__.exit, !dbg !129
SUSAN: adding to deadInsts  %29 = phi i32 [ %.pre.i, %entry.omp.precond.end_crit_edge.i ], [ %8, %omp.loop.exit.i ], !dbg !94
SUSAN: adding to deadInsts  %30 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !94
SUSAN: adding to deadInsts  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @3, i64 0, i64 0), i8** %30, align 8, !dbg !94, !tbaa !96, !noalias !88
SUSAN: adding to deadInsts  call void @__kmpc_barrier(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 %29) #7, !dbg !94, !noalias !88
SUSAN: adding to deadInsts  ret void, !dbg !130
SUSAN: add phi to deadInst:   %29 = phi i32 [ %.pre.i, %entry.omp.precond.end_crit_edge.i ], [ %8, %omp.loop.exit.i ], !dbg !94
=========================SUSAN: IR NAMING BEFORE=====================
  %alpha.addr.i = alloca double, align 8 -> alpha
  %beta.addr.i = alloca double, align 8 -> beta
  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ] -> i
  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221 -> j
  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225 -> i
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39 -> __nptr
  %conv.i = trunc i64 %call.i to i32, !dbg !53 -> dump_code
  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39 -> __nptr
  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39 -> __nptr
  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39 -> __nptr
  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ] -> j
  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124 -> j
  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128 -> i
  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ] -> i
  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ] -> j
  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144 -> j
  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148 -> i
  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ] -> i
  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ] -> j
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158 -> j
  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162 -> i
  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ] -> i
  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ] -> j
  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ] -> .omp.iv
  %.omp.lb.i = alloca i32, align 4 -> .omp.lb
  %.omp.ub.i = alloca i32, align 4 -> .omp.ub
  %.omp.stride.i = alloca i32, align 4 -> .omp.stride
  %.omp.is_last.i = alloca i32, align 4 -> .omp.is_last
  %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88 -> .capture_expr.
  %sub12.i = add nsw i32 %2, -1, !dbg !92 -> .capture_expr.
  %sub12.i = add nsw i32 %2, -1, !dbg !92 -> .omp.ub
  %9 = load i32, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88 -> .omp.ub
  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95 -> .omp.ub
  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88 -> .omp.iv
  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88 -> .omp.lb
  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ] -> j
  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ] -> k
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120 -> k
  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124 -> j
  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92 -> .omp.iv
SUSAN: inst:  %ni.addr.i = alloca i32, align 4
ni:  %ni.addr.i = alloca i32, align 4
SUSAN: inst:  %nj.addr.i = alloca i32, align 4
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
SUSAN: inst:  %nk.addr.i = alloca i32, align 4
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %alpha.addr.i = alloca double, align 8
alpha:  %alpha.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %beta.addr.i = alloca double, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %C.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %A.addr.i = alloca double*, align 8
A:  %A.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %B.addr.i = alloca double*, align 8
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp6.i = icmp eq i32 %rem.i, 0, !dbg !217
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp6.i, label %if.then.i, label %for.inc.i, !dbg !218
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !219, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %fputc25.i = call i32 @fputc(i32 10, %struct._IO_FILE* %38) #8, !dbg !220
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc.i, !dbg !220
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i73, metadata !198, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond.i74 = icmp eq i64 %indvars.iv.next.i73, %7, !dbg !222
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond.i74, label %for.inc8.i75.loopexit, label %for.body3.i72, !dbg !207, !llvm.loop !223
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc8.i75, !dbg !225
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next32.i, metadata !197, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond34.i = icmp eq i64 %indvars.iv.next32.i, %31, !dbg !226
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %.kmpc_loc.addr.i = alloca %struct.ident_t, align 8
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %argc, metadata !26, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8** %argv, metadata !27, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %arrayidx = getelementptr inbounds i8*, i8** %argv, i64 1, !dbg !38
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8* %0, metadata !43, metadata !DIExpression()) #7, !dbg !50
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %call.i = tail call i64 @strtol(i8* nocapture nonnull %0, i8** null, i32 10) #7, !dbg !52
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %conv.i = trunc i64 %call.i to i32, !dbg !53
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i, metadata !28, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %arrayidx1 = getelementptr inbounds i8*, i8** %argv, i64 2, !dbg !54
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8* %1, metadata !43, metadata !DIExpression()) #7, !dbg !55
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %call.i58 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 10) #7, !dbg !57
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %ni.addr.i = alloca i32, align 4
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !29, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %arrayidx3 = getelementptr inbounds i8*, i8** %argv, i64 3, !dbg !59
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8* %2, metadata !43, metadata !DIExpression()) #7, !dbg !60
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %call.i60 = tail call i64 @strtol(i8* nocapture nonnull %2, i8** null, i32 10) #7, !dbg !62
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %nj.addr.i = alloca i32, align 4
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !30, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %arrayidx5 = getelementptr inbounds i8*, i8** %argv, i64 4, !dbg !64
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i8* %3, metadata !43, metadata !DIExpression()) #7, !dbg !65
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %call.i62 = tail call i64 @strtol(i8* nocapture nonnull %3, i8** null, i32 10) #7, !dbg !67
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %nk.addr.i = alloca i32, align 4
SUSAN: inst:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !31, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul = shl i64 %call.i58, 32, !dbg !69
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %sext = mul i64 %mul, %call.i60, !dbg !70
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul7 = ashr exact i64 %sext, 29, !dbg !71
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %call8 = tail call noalias i8* @malloc(i64 %mul7) #7, !dbg !72
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %C.addr.i = alloca double*, align 8
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %4 = bitcast i8* %call8 to double*, !dbg !73
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %4, metadata !34, metadata !DIExpression()), !dbg !37
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %sext78 = mul i64 %mul, %call.i62, !dbg !74
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul11 = ashr exact i64 %sext78, 29, !dbg !75
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %call12 = tail call noalias i8* @malloc(i64 %mul11) #7, !dbg !76
A:  %A.addr.i = alloca double*, align 8
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %5 = bitcast i8* %call12 to double*, !dbg !77
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %5, metadata !35, metadata !DIExpression()), !dbg !37
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul13 = shl i64 %call.i60, 32, !dbg !78
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %sext79 = mul i64 %mul13, %call.i62, !dbg !79
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul15 = ashr exact i64 %sext79, 29, !dbg !80
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %call16 = tail call noalias i8* @malloc(i64 %mul15) #7, !dbg !81
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %B.addr.i = alloca double*, align 8
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %6 = bitcast i8* %call16 to double*, !dbg !82
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %6, metadata !36, metadata !DIExpression()), !dbg !37
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !83, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !92, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !93, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %4, metadata !96, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %5, metadata !97, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %6, metadata !98, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %7 = and i64 %call.i60, 4294967295
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %8 = and i64 %call.i62, 4294967295
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp102.i = icmp sgt i32 %conv.i59, 0, !dbg !103
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i, label %for.cond34.preheader.i, !dbg !106
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp2100.i = icmp sgt i32 %conv.i61, 0, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv5.i = sitofp i32 %conv.i59 to double, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %wide.trip.count123.i = and i64 %call.i58, 4294967295, !dbg !103
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond1.preheader.i, !dbg !106
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv121.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp2100.i, label %for.body3.lr.ph.i, label %for.inc8.i, !dbg !110
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %9 = trunc i64 %indvars.iv121.i to i32, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv.i64 = sitofp i32 %9 to double, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %10 = mul nuw nsw i64 %indvars.iv121.i, %7, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx.i = getelementptr inbounds double, double* %4, i64 %10, !dbg !107
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.body3.i, !dbg !110
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp1695.i = icmp sgt i32 %conv.i63, 0, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond15.preheader.i, !dbg !116
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv117.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %11 = trunc i64 %indvars.iv117.i to i32, !dbg !117
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv4.i = sitofp i32 %11 to double, !dbg !117
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul.i = fmul double %conv.i64, %conv4.i, !dbg !118
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %div.i = fdiv double %mul.i, %conv5.i, !dbg !119
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx7.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv117.i, !dbg !120
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double %div.i, double* %arrayidx7.i, align 8, !dbg !121, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next118.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond120.i = icmp eq i64 %indvars.iv.next118.i, %7, !dbg !125
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond120.i, label %for.inc8.i.loopexit, label %for.body3.i, !dbg !110, !llvm.loop !126
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc8.i, !dbg !128
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ]
j:  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next122.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond124.i = icmp eq i64 %indvars.iv.next122.i, %wide.trip.count123.i, !dbg !103
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond124.i, label %for.cond15.preheader.lr.ph.i, label %for.cond1.preheader.i, !dbg !106, !llvm.loop !129
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv113.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp1695.i, label %for.body18.lr.ph.i, label %for.inc31.i, !dbg !131
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %12 = trunc i64 %indvars.iv113.i to i32, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv19.i = sitofp i32 %12 to double, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %13 = mul nuw nsw i64 %indvars.iv113.i, %8, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx25.i = getelementptr inbounds double, double* %5, i64 %13, !dbg !111
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.body18.i, !dbg !131
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond34.preheader.i, !dbg !132
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp3592.i = icmp sgt i32 %conv.i63, 0, !dbg !132
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp3592.i, label %for.cond38.preheader.lr.ph.i, label %init_array.exit, !dbg !135
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp3990.i = icmp sgt i32 %conv.i61, 0, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv45.i = sitofp i32 %conv.i59 to double, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond38.preheader.i, !dbg !135
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv109.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %14 = trunc i64 %indvars.iv109.i to i32, !dbg !139
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv20.i = sitofp i32 %14 to double, !dbg !139
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul21.i = fmul double %conv19.i, %conv20.i, !dbg !140
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %div23.i = fdiv double %mul21.i, %conv5.i, !dbg !141
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx27.i = getelementptr inbounds double, double* %arrayidx25.i, i64 %indvars.iv109.i, !dbg !142
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double %div23.i, double* %arrayidx27.i, align 8, !dbg !143, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next110.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond112.i = icmp eq i64 %indvars.iv.next110.i, %8, !dbg !145
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond112.i, label %for.inc31.i.loopexit, label %for.body18.i, !dbg !131, !llvm.loop !146
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc31.i, !dbg !148
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ]
j:  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next114.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond116.i = icmp eq i64 %indvars.iv.next114.i, %wide.trip.count123.i, !dbg !149
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond116.i, label %for.cond34.preheader.i.loopexit, label %for.cond15.preheader.i, !dbg !116, !llvm.loop !150
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond34.i, label %print_array.exit.loopexit, label %for.cond1.preheader.i66, !dbg !201, !llvm.loop !227
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %print_array.exit, !dbg !229
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %39 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !229, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %fputc.i = call i32 @fputc(i32 10, %struct._IO_FILE* %39) #8, !dbg !230
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %if.end, !dbg !231
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @free(i8* %call8) #7, !dbg !232
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @free(i8* %call12) #7, !dbg !233
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @free(i8* %call16) #7, !dbg !234
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  ret i32 0, !dbg !235
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv105.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp3990.i, label %for.body41.lr.ph.i, label %for.inc54.i, !dbg !152
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %15 = trunc i64 %indvars.iv105.i to i32, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv42.i = sitofp i32 %15 to double, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %16 = mul nuw nsw i64 %indvars.iv105.i, %7, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx48.i = getelementptr inbounds double, double* %6, i64 %16, !dbg !136
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.body41.i, !dbg !152
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %17 = trunc i64 %indvars.iv.i to i32, !dbg !153
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %conv43.i = sitofp i32 %17 to double, !dbg !153
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul44.i = fmul double %conv42.i, %conv43.i, !dbg !154
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %div46.i = fdiv double %mul44.i, %conv45.i, !dbg !155
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx50.i = getelementptr inbounds double, double* %arrayidx48.i, i64 %indvars.iv.i, !dbg !156
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double %div46.i, double* %arrayidx50.i, align 8, !dbg !157, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !100, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond.i = icmp eq i64 %indvars.iv.next.i, %7, !dbg !159
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond.i, label %for.inc54.i.loopexit, label %for.body41.i, !dbg !152, !llvm.loop !160
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.inc54.i, !dbg !162
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ]
j:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next106.i, metadata !99, metadata !DIExpression()), !dbg !101
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %exitcond108.i = icmp eq i64 %indvars.iv.next106.i, %8, !dbg !132
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %exitcond108.i, label %init_array.exit.loopexit, label %for.cond38.preheader.i, !dbg !135, !llvm.loop !163
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %init_array.exit
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !32, metadata !DIExpression()), !dbg !37
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla3, metadata !258, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla5, metadata !259, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %A, metadata !260, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla7, metadata !261, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla9, metadata !262, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %B, metadata !263, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  %0 = bitcast %struct.ident_t* %.kmpc_loc.addr.i to i8*
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !33, metadata !DIExpression()), !dbg !37
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %18 = bitcast i32* %ni.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %19 = bitcast i32* %nj.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %20 = bitcast i32* %nk.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %21 = bitcast double* %alpha.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %22 = bitcast double* %beta.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %23 = bitcast double** %C.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %24 = bitcast double** %A.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %25 = bitcast double** %B.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %26 = bitcast %struct.ident_t* %.kmpc_loc.addr.i to i8*
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !165, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i32 %conv.i59, i32* %ni.addr.i, align 4, !tbaa !182
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !170, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i32 %conv.i61, i32* %nj.addr.i, align 4, !tbaa !182
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !171, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i32 %conv.i63, i32* %nk.addr.i, align 4, !tbaa !182
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double 3.241200e+04, metadata !172, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double 3.241200e+04, double* %alpha.addr.i, align 8, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double 2.123000e+03, metadata !173, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store double 2.123000e+03, double* %beta.addr.i, align 8, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %4, metadata !174, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %28 = bitcast double** %C.addr.i to i8**
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i8* %call8, i8** %28, align 8, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %5, metadata !175, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %29 = bitcast double** %A.addr.i to i8**
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i8* %call12, i8** %29, align 8, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %6, metadata !176, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %30 = bitcast double** %B.addr.i to i8**
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i8* %call16, i8** %30, align 8, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !165, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %31 = and i64 %call.i58, 4294967295
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !170, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i63, metadata !171, metadata !DIExpression()) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %32 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !184
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @1, i64 0, i64 0), i8** %32, align 8, !dbg !184, !tbaa !185
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %ni.addr.i, metadata !165, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %nj.addr.i, metadata !170, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %nk.addr.i, metadata !171, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %alpha.addr.i, metadata !172, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %beta.addr.i, metadata !173, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %C.addr.i, metadata !174, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %A.addr.i, metadata !175, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %B.addr.i, metadata !176, metadata !DIExpression(DW_OP_deref)) #7, !dbg !180
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void (%struct.ident_t*, i32, void (i32*, i32*, ...)*, ...) @__kmpc_fork_call(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 14, void (i32*, i32*, ...)* bitcast (void (i32*, i32*, i32*, i32*, i64, i64, double**, double*, i32*, double*, i64, i64, double**, i64, i64, double**)* @.omp_outlined. to void (i32*, i32*, ...)*), i32* nonnull %ni.addr.i, i32* nonnull %nj.addr.i, i64 %31, i64 %7, double** nonnull %C.addr.i, double* nonnull %beta.addr.i, i32* nonnull %nk.addr.i, double* nonnull %alpha.addr.i, i64 %31, i64 %8, double** nonnull %A.addr.i, i64 %8, i64 %7, double** nonnull %B.addr.i) #7, !dbg !184
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp = icmp eq i32 %conv.i, 1, !dbg !187
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp, label %if.then, label %if.end, !dbg !189
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i59, metadata !190, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %conv.i61, metadata !195, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %4, metadata !196, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !197, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp102.i, label %for.cond1.preheader.lr.ph.i65, label %print_array.exit, !dbg !201
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %cmp226.i = icmp sgt i32 %conv.i61, 0, !dbg !203
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.cond1.preheader.i66, !dbg !201
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv31.i, metadata !197, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !198, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br i1 %cmp226.i, label %for.body3.lr.ph.i69, label %for.inc8.i75, !dbg !207
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %33 = mul nuw nsw i64 %indvars.iv31.i, %7, !dbg !208
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx.i67 = getelementptr inbounds double, double* %4, i64 %33, !dbg !208
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %34 = trunc i64 %indvars.iv31.i to i32, !dbg !210
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %mul.i68 = mul nsw i32 %34, %conv.i59, !dbg !210
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  br label %for.body3.i72, !dbg !207
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.i70, metadata !198, metadata !DIExpression()) #7, !dbg !199
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %35 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !212, !tbaa !39
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %arrayidx5.i = getelementptr inbounds double, double* %arrayidx.i67, i64 %indvars.iv.i70, !dbg !213
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %36 = load double, double* %arrayidx5.i, align 8, !dbg !213, !tbaa !122
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %call.i71 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %35, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), double %36) #8, !dbg !214
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %37 = trunc i64 %indvars.iv.i70 to i32, !dbg !215
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %add.i = add nsw i32 %mul.i68, %37, !dbg !215
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %rem.i = srem i32 %add.i, 20, !dbg !216
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
i:  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ]
j:  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ]
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %.omp.lb.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
SUSAN: inst:  %.omp.ub.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  %.omp.stride.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  %.omp.is_last.i = alloca i32, align 4
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  %.kmpc_loc.addr.i = alloca %struct.ident_t, align 8
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %.global_tid., metadata !248, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %.bound_tid., metadata !249, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %ni, metadata !250, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %nj, metadata !251, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla, metadata !252, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla1, metadata !253, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %C, metadata !254, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %beta, metadata !255, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %nk, metadata !256, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %alpha, metadata !257, metadata !DIExpression()), !dbg !264
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %.global_tid., metadata !265, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* undef, metadata !268, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %ni, metadata !269, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %nj, metadata !270, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 undef, metadata !271, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla1, metadata !272, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %C, metadata !273, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %beta, metadata !274, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %nk, metadata !275, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double* %alpha, metadata !276, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 undef, metadata !277, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla5, metadata !278, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %A, metadata !279, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 undef, metadata !280, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %vla9, metadata !281, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata double** %B, metadata !282, metadata !DIExpression()) #7, !dbg !294
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
.capture_expr.:  %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %2, metadata !286, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
SUSAN: inst:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %sub12.i, metadata !286, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !287, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %cmp.i = icmp sgt i32 %2, 0, !dbg !92
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  br i1 %cmp.i, label %omp.precond.then.i, label %entry.omp.precond.end_crit_edge.i, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %.pre.i = load i32, i32* %.global_tid., align 4, !dbg !94, !tbaa !84, !alias.scope !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  br label %.omp_outlined._debug__.exit, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %3 = bitcast i32* %.omp.lb.i to i8*, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !288, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  store i32 0, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %4 = bitcast i32* %.omp.ub.i to i8*, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %sub12.i, metadata !289, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  store i32 %sub12.i, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %5 = bitcast i32* %.omp.stride.i to i8*, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 1, metadata !290, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  store i32 1, i32* %.omp.stride.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %6 = bitcast i32* %.omp.is_last.i to i8*, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !291, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  store i32 0, i32* %.omp.is_last.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %7 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @3, i64 0, i64 0), i8** %7, align 8, !dbg !93, !tbaa !96, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %8 = load i32, i32* %.global_tid., align 4, !dbg !93, !tbaa !84, !alias.scope !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %.omp.lb.i, metadata !288, metadata !DIExpression(DW_OP_deref)) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %.omp.ub.i, metadata !289, metadata !DIExpression(DW_OP_deref)) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %.omp.stride.i, metadata !290, metadata !DIExpression(DW_OP_deref)) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @llvm.dbg.value(metadata i32* %.omp.is_last.i, metadata !291, metadata !DIExpression(DW_OP_deref)) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  call void @__kmpc_for_static_init_4(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 %8, i32 34, i32* nonnull %.omp.is_last.i, i32* nonnull %.omp.lb.i, i32* nonnull %.omp.ub.i, i32* nonnull %.omp.stride.i, i32 1, i32 1) #7, !dbg !93, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %sub12.i = add nsw i32 %2, -1, !dbg !92
SUSAN: inst:  %9 = load i32, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %9 = load i32, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %9, metadata !289, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %9 = load i32, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: inst:  %cmp15.i = icmp slt i32 %9, %2, !dbg !95
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %9 = load i32, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
SUSAN: inst:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %cond.i, metadata !289, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  store i32 %cond.i, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %10, metadata !288, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %10, metadata !283, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %cond.i, metadata !289, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %cmp165.i = icmp sgt i32 %10, %cond.i, !dbg !92
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  br i1 %cmp165.i, label %omp.loop.exit.i, label %for.cond.preheader.lr.ph.i, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %11 = load i32, i32* %nj, align 4, !dbg !99, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %cmp183.i = icmp sgt i32 %11, 0, !dbg !99
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %12 = load double*, double** %C, align 8, !dbg !102, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %13 = load i32, i32* %nk, align 4, !dbg !104, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %cmp231.i = icmp sgt i32 %13, 0, !dbg !104
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %14 = sext i32 %10 to i64, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %15 = sext i32 %cond.i to i64, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %wide.trip.count.i = zext i32 %11 to i64, !dbg !99
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  br label %for.cond.preheader.i, !dbg !93
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv10.i, metadata !283, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !292, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  br i1 %cmp183.i, label %for.body.lr.ph.i, label %omp.inner.for.inc.i, !dbg !107
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %16 = mul nsw i64 %indvars.iv10.i, %vla1, !dbg !102
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %arrayidx.i = getelementptr inbounds double, double* %12, i64 %16, !dbg !102
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %17 = load double*, double** %A, align 8, !dbg !104, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %18 = mul nsw i64 %indvars.iv10.i, %vla5, !dbg !104
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %arrayidx26.i = getelementptr inbounds double, double* %17, i64 %18, !dbg !104
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %19 = load double*, double** %B, align 8, !dbg !104, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %20 = load i32, i32* %nk, align 4, !dbg !104, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %21 = sext i32 %20 to i64, !dbg !107
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  br label %for.body.i, !dbg !107
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv8.i, metadata !292, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  %22 = load double, double* %beta, align 8, !dbg !108, !tbaa !109, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  %arrayidx20.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv8.i, !dbg !111
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  %23 = load double, double* %arrayidx20.i, align 8, !dbg !112, !tbaa !109, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  %mul21.i = fmul double %22, %23, !dbg !112
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  store double %mul21.i, double* %arrayidx20.i, align 8, !dbg !112, !tbaa !109, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 0, metadata !293, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  br i1 %cmp231.i, label %for.body24.lr.ph.i, label %for.inc40.i, !dbg !113
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  %arrayidx31.i = getelementptr inbounds double, double* %19, i64 %indvars.iv8.i, !dbg !104
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  br label %for.body24.i, !dbg !113
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  %24 = phi double [ %mul21.i, %for.body24.lr.ph.i ], [ %add39.i, %for.body24.i ], !dbg !114
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: inst:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.i, metadata !293, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %25 = load double, double* %alpha, align 8, !dbg !115, !tbaa !109, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %arrayidx28.i = getelementptr inbounds double, double* %arrayidx26.i, i64 %indvars.iv.i, !dbg !116
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %26 = load double, double* %arrayidx28.i, align 8, !dbg !116, !tbaa !109, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %mul29.i = fmul double %25, %26, !dbg !117
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %27 = mul nsw i64 %indvars.iv.i, %vla9, !dbg !118
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %arrayidx33.i = getelementptr inbounds double, double* %arrayidx31.i, i64 %27, !dbg !118
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %28 = load double, double* %arrayidx33.i, align 8, !dbg !118, !tbaa !109, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %mul34.i = fmul double %mul29.i, %28, !dbg !119
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %add39.i = fadd double %24, %mul34.i, !dbg !114
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  store double %add39.i, double* %arrayidx20.i, align 8, !dbg !114, !tbaa !109, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: inst:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next.i, metadata !293, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
SUSAN: inst:  %cmp23.i = icmp slt i64 %indvars.iv.next.i, %21, !dbg !121
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
SUSAN: inst:  br i1 %cmp23.i, label %for.body24.i, label %for.inc40.i.loopexit, !dbg !113, !llvm.loop !122
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
SUSAN: inst:  br label %for.inc40.i, !dbg !124
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
k:  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
SUSAN: inst:  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next9.i, metadata !292, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
SUSAN: inst:  %exitcond.i = icmp eq i64 %indvars.iv.next9.i, %wide.trip.count.i, !dbg !125
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
SUSAN: inst:  br i1 %exitcond.i, label %omp.inner.for.inc.i.loopexit, label %for.body.i, !dbg !107, !llvm.loop !126
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
SUSAN: inst:  br label %omp.inner.for.inc.i, !dbg !92
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
j:  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
SUSAN: inst:  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @llvm.dbg.value(metadata i64 %indvars.iv.next11.i, metadata !283, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @llvm.dbg.value(metadata i32 %cond.i, metadata !289, metadata !DIExpression()) #7, !dbg !300
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %cmp16.i = icmp slt i64 %indvars.iv10.i, %15, !dbg !92
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  br i1 %cmp16.i, label %for.cond.preheader.i, label %omp.loop.exit.i.loopexit, !dbg !93, !llvm.loop !128
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  br label %omp.loop.exit.i, !dbg !129
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.iv:  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @4, i64 0, i64 0), i8** %7, align 8, !dbg !129, !tbaa !96, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  call void @__kmpc_for_static_fini(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 %8) #7, !dbg !129, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  br label %.omp_outlined._debug__.exit, !dbg !129
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %10 = load i32, i32* %.omp.lb.i, align 4, !dbg !95, !tbaa !84, !noalias !88
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %cond.i = select i1 %cmp15.i, i32 %9, i32 %sub12.i, !dbg !95
SUSAN: inst:  %29 = phi i32 [ %.pre.i, %entry.omp.precond.end_crit_edge.i ], [ %8, %omp.loop.exit.i ], !dbg !94
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
SUSAN: inst:  %30 = getelementptr inbounds %struct.ident_t, %struct.ident_t* %.kmpc_loc.addr.i, i64 0, i32 4, !dbg !94
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
SUSAN: inst:  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @3, i64 0, i64 0), i8** %30, align 8, !dbg !94, !tbaa !96, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
SUSAN: inst:  call void @__kmpc_barrier(%struct.ident_t* nonnull %.kmpc_loc.addr.i, i32 %29) #7, !dbg !94, !noalias !88
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
SUSAN: inst:  ret void, !dbg !130
.capture_expr.:  %sub12.i = add nsw i32 %2, -1, !dbg !92
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
SUSAN: inst:  %27 = call i8* @memcpy(i8* %26, i8* bitcast (%struct.ident_t* @0 to i8*), i64 16)
A:  %5 = bitcast i8* %call12 to double*, !dbg !77
B:  %6 = bitcast i8* %call16 to double*, !dbg !82
C:  %4 = bitcast i8* %call8 to double*, !dbg !73
__nptr:  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39
alpha:  %alpha.addr.i = alloca double, align 8
beta:  %beta.addr.i = alloca double, align 8
dump_code:  %conv.i = trunc i64 %call.i to i32, !dbg !53
ni:  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58
nj:  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63
nk:  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68
SUSAN: inst:  %1 = call i8* @memcpy(i8* %0, i8* bitcast (%struct.ident_t* @2 to i8*), i64 24)
.omp.is_last:  %.omp.is_last.i = alloca i32, align 4
.omp.lb:  %.omp.lb.i = alloca i32, align 4
.omp.stride:  %.omp.stride.i = alloca i32, align 4
.omp.ub:  %.omp.ub.i = alloca i32, align 4
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
=========================SUSAN: IR NAMING=====================
  %alpha.addr.i = alloca double, align 8 -> alpha
  %beta.addr.i = alloca double, align 8 -> beta
  %indvars.iv121.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i ], [ %indvars.iv.next122.i, %for.inc8.i ] -> i
  %indvars.iv.next.i73 = add nuw nsw i64 %indvars.iv.i70, 1, !dbg !221 -> j
  %indvars.iv.next32.i = add nuw nsw i64 %indvars.iv31.i, 1, !dbg !225 -> i
  %0 = load i8*, i8** %arrayidx, align 8, !dbg !38, !tbaa !39 -> __nptr
  %conv.i = trunc i64 %call.i to i32, !dbg !53 -> dump_code
  %1 = load i8*, i8** %arrayidx1, align 8, !dbg !54, !tbaa !39 -> __nptr
  %conv.i59 = trunc i64 %call.i58 to i32, !dbg !58 -> ni
  %2 = load i8*, i8** %arrayidx3, align 8, !dbg !59, !tbaa !39 -> __nptr
  %conv.i61 = trunc i64 %call.i60 to i32, !dbg !63 -> nj
  %3 = load i8*, i8** %arrayidx5, align 8, !dbg !64, !tbaa !39 -> __nptr
  %conv.i63 = trunc i64 %call.i62 to i32, !dbg !68 -> nk
  %4 = bitcast i8* %call8 to double*, !dbg !73 -> C
  %5 = bitcast i8* %call12 to double*, !dbg !77 -> A
  %6 = bitcast i8* %call16 to double*, !dbg !82 -> B
  %indvars.iv117.i = phi i64 [ 0, %for.body3.lr.ph.i ], [ %indvars.iv.next118.i, %for.body3.i ] -> j
  %indvars.iv.next118.i = add nuw nsw i64 %indvars.iv117.i, 1, !dbg !124 -> j
  %indvars.iv.next122.i = add nuw nsw i64 %indvars.iv121.i, 1, !dbg !128 -> i
  %indvars.iv113.i = phi i64 [ 0, %for.cond15.preheader.lr.ph.i ], [ %indvars.iv.next114.i, %for.inc31.i ] -> i
  %indvars.iv109.i = phi i64 [ 0, %for.body18.lr.ph.i ], [ %indvars.iv.next110.i, %for.body18.i ] -> j
  %indvars.iv.next110.i = add nuw nsw i64 %indvars.iv109.i, 1, !dbg !144 -> j
  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1, !dbg !148 -> i
  %indvars.iv105.i = phi i64 [ 0, %for.cond38.preheader.lr.ph.i ], [ %indvars.iv.next106.i, %for.inc54.i ] -> i
  %indvars.iv.i = phi i64 [ 0, %for.body41.lr.ph.i ], [ %indvars.iv.next.i, %for.body41.i ] -> j
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !158 -> j
  %indvars.iv.next106.i = add nuw nsw i64 %indvars.iv105.i, 1, !dbg !162 -> i
  %indvars.iv31.i = phi i64 [ 0, %for.cond1.preheader.lr.ph.i65 ], [ %indvars.iv.next32.i, %for.inc8.i75 ] -> i
  %indvars.iv.i70 = phi i64 [ 0, %for.body3.lr.ph.i69 ], [ %indvars.iv.next.i73, %for.inc.i ] -> j
  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ] -> .omp.iv
  %.omp.lb.i = alloca i32, align 4 -> .omp.lb
  %.omp.stride.i = alloca i32, align 4 -> .omp.stride
  %.omp.is_last.i = alloca i32, align 4 -> .omp.is_last
  %9 = load i32, i32* %.omp.ub.i, align 4, !dbg !95, !tbaa !84, !noalias !88 -> .omp.ub
  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ] -> j
  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ] -> k
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120 -> k
  %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124 -> j
  %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92 -> .omp.iv
SUSAN: declaring varName 5298: _7
SUSAN: declaring   %mul21.i = fmul double %22, %23, !dbg !112
SUSAN: declaring varName 5298: _7
SUSAN: declaring varName 5298: k
SUSAN: declaring   %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
SUSAN: declaring varName 5298: j
SUSAN: declaring   %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
SUSAN: declaring varName 5298: _omp_iv
SUSAN: declaring   %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
SUSAN: declaring varName 5298: _omp_iv
SUSAN: printing bb:entry
SUSAN: emitting branch:   br i1 %cmp.i, label %omp.precond.then.i, label %entry.omp.precond.end_crit_edge.i, !dbg !93
statically proven dead branch:   br i1 %cmp.i, label %omp.precond.then.i, label %entry.omp.precond.end_crit_edge.i, !dbg !93
printing BB in emitIfBlockentry.omp.precond.end_crit_edge.i
printing BB:entry.omp.precond.end_crit_edge.iat 7169
SUSAN: emitting branch:   br label %.omp_outlined._debug__.exit, !dbg !93
printing BB in emitIfBlock.omp_outlined._debug__.exit
printing BB:.omp_outlined._debug__.exitat 7169
SUSAN: printing bb:omp.precond.then.i
SUSAN: emitting branch:   br i1 %cmp165.i, label %omp.loop.exit.i, label %for.cond.preheader.lr.ph.i, !dbg !93
statically proven dead branch:   br i1 %cmp165.i, label %omp.loop.exit.i, label %for.cond.preheader.lr.ph.i, !dbg !93
SUSAN: printing bb:for.cond.preheader.lr.ph.i
SUSAN: emitting branch:   br label %for.cond.preheader.i, !dbg !93
SUSAN: br:  br label %for.cond.preheader.i, !dbg !93
SUSAN: printing loop for.cond.preheader.i at 5538
SUSAN: start printing loop: Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: loop block: for.cond.preheader.i
SUSAN: loop block: for.body.lr.ph.i
SUSAN: loop block: for.body.i
SUSAN: loop block: for.body24.lr.ph.i
SUSAN: loop block: for.body24.i
SUSAN: loop block: for.inc40.i.loopexit
SUSAN: loop block: for.inc40.i
SUSAN: loop block: omp.inner.for.inc.i.loopexit
SUSAN: loop block: omp.inner.for.inc.i
SUSAN: found LP for L:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

isomp
SUSAN: printing local in private:   %mul21.i = fmul double %22, %23, !dbg !112
LP->IV: 0x5597c06b6ea8
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing local in private:   %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
LP->IV: 0x5597c06b6ea8
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing local in private:   %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
LP->IV: 0x5597c06b6ea8
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing local in private:   %indvars.iv.next11.i = add nsw i64 %indvars.iv10.i, 1, !dbg !92
LP->IV: 0x5597c06b6ea8
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
SUSAN: found for loop profile:
lb: i32 0
ub:   %2 = load i32, i32* %ni, align 4, !dbg !83, !tbaa !84, !noalias !88
incr: i32 1
SUSAN: printing IV  %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: condInst:   %cmp16.i = icmp slt i64 %indvars.iv10.i, %15, !dbg !92
SUSAN: curinstr before loadinst:   br label %for.cond.preheader.i, !dbg !93
SUSAN: printing loop body forLoop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
SUSAN: skip Block:omp.inner.for.inc.i
printing BB:for.cond.preheader.iat 6187
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
SUSAN: emitting branch:   br i1 %cmp183.i, label %for.body.lr.ph.i, label %omp.inner.for.inc.i, !dbg !107
statically proven dead branch:   br i1 %cmp183.i, label %for.body.lr.ph.i, label %omp.inner.for.inc.i, !dbg !107
printing BB:for.body.lr.ph.iat 6187
SUSAN: emitting branch:   br label %for.body.i, !dbg !107
SUSAN: printing loop for.body.i at 5753
SUSAN: start printing loop: Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: loop block: for.body.i
SUSAN: loop block: for.body24.lr.ph.i
SUSAN: loop block: for.body24.i
SUSAN: loop block: for.inc40.i.loopexit
SUSAN: loop block: for.inc40.i
SUSAN: found LP for L:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub: i32* %nj
incr:   %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124
SUSAN: printing IV  %indvars.iv8.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next9.i, %for.inc40.i ]
SUSAN: condInst:  %exitcond.i = icmp eq i64 %indvars.iv.next9.i, %wide.trip.count.i, !dbg !125
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %wide.trip.count.i = zext i32 %11 to i64, !dbg !99
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next9.i = add nuw nsw i64 %indvars.iv8.i, 1, !dbg !124 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: skip Block:for.inc40.i
printing BB:for.body.iat 6187
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %mul21.i = fmul double %22, %23, !dbg !112 at 6678
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %mul21.i = fmul double %22, %23, !dbg !112
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %22 = load double, double* %beta, align 8, !dbg !108, !tbaa !109, !noalias !88
SUSAN: GEPINST:   %arrayidx20.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv8.i, !dbg !111
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx20.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv8.i, !dbg !111
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx.i = getelementptr inbounds double, double* %12, i64 %16, !dbg !102
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
SUSAN: curinstr before loadinst:   %arrayidx.i = getelementptr inbounds double, double* %12, i64 %16, !dbg !102
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   store double %mul21.i, double* %arrayidx20.i, align 8, !dbg !112, !tbaa !109, !noalias !88 at 6678
SUSAN: GEPINST:   %arrayidx20.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv8.i, !dbg !111
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx20.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv8.i, !dbg !111
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx.i = getelementptr inbounds double, double* %12, i64 %16, !dbg !102
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
SUSAN: curinstr before loadinst:   %arrayidx.i = getelementptr inbounds double, double* %12, i64 %16, !dbg !102
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %cmp231.i, label %for.body24.lr.ph.i, label %for.inc40.i, !dbg !113
statically proven dead branch:   br i1 %cmp231.i, label %for.body24.lr.ph.i, label %for.inc40.i, !dbg !113
printing BB:for.body24.lr.ph.iat 6187
SUSAN: emitting branch:   br label %for.body24.i, !dbg !113
SUSAN: printing loop for.body24.i at 5753
SUSAN: start printing loop: Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: loop block: for.body24.i
SUSAN: found LP for L:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: found for loop profile:
lb: i64 0
ub: i32* %nk
incr:   %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120
SUSAN: printing IV  %indvars.iv.i = phi i64 [ 0, %for.body24.lr.ph.i ], [ %indvars.iv.next.i, %for.body24.i ]
SUSAN: condInst:  %cmp23.i = icmp slt i64 %indvars.iv.next.i, %21, !dbg !121
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
SUSAN: curinstr before loadinst:   %21 = sext i32 %20 to i64, !dbg !107
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1, !dbg !120 at 6003
SUSAN: did omp_SkipVals skips my inst?
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing loop body forLoop at depth 3 containing: %for.body24.i<header><latch><exiting>

printing BB:for.body24.iat 6187
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   %add39.i = fadd double %24, %mul34.i, !dbg !114 at 6678
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %mul29.i = fmul double %25, %26, !dbg !117
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %25 = load double, double* %alpha, align 8, !dbg !115, !tbaa !109, !noalias !88
SUSAN: GEPINST:   %arrayidx28.i = getelementptr inbounds double, double* %arrayidx26.i, i64 %indvars.iv.i, !dbg !116
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx28.i = getelementptr inbounds double, double* %arrayidx26.i, i64 %indvars.iv.i, !dbg !116
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx26.i = getelementptr inbounds double, double* %17, i64 %18, !dbg !104
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
SUSAN: curinstr before loadinst:   %arrayidx26.i = getelementptr inbounds double, double* %17, i64 %18, !dbg !104
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: curinstr before loadinst:   %18 = mul nsw i64 %indvars.iv10.i, %vla5, !dbg !104
SUSAN: GEPINST:   %arrayidx33.i = getelementptr inbounds double, double* %arrayidx31.i, i64 %27, !dbg !118
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx33.i = getelementptr inbounds double, double* %arrayidx31.i, i64 %27, !dbg !118
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx31.i = getelementptr inbounds double, double* %19, i64 %indvars.iv8.i, !dbg !104
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
SUSAN: curinstr before loadinst:   %arrayidx31.i = getelementptr inbounds double, double* %19, i64 %indvars.iv8.i, !dbg !104
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: printing instruction   store double %add39.i, double* %arrayidx20.i, align 8, !dbg !114, !tbaa !109, !noalias !88 at 6678
SUSAN: GEPINST:   %arrayidx20.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv8.i, !dbg !111
SUSAN: dereferenceTimes = 1
SUSAN: printing GEP:   %arrayidx20.i = getelementptr inbounds double, double* %arrayidx.i, i64 %indvars.iv8.i, !dbg !111
SUSAN: accessMemory true
SUSAN: first index is integer/pointertype type
SUSAN: printing GEP:   %arrayidx.i = getelementptr inbounds double, double* %12, i64 %16, !dbg !102
SUSAN: accessMemory true
SUSAN: printReference true
SUSAN: first index is integer/pointertype type
SUSAN: curinstr before loadinst:   %arrayidx.i = getelementptr inbounds double, double* %12, i64 %16, !dbg !102
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 1 containing: %for.cond.preheader.i<header>,%for.body.lr.ph.i,%for.body.i,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i,%omp.inner.for.inc.i.loopexit,%omp.inner.for.inc.i<latch><exiting>
    Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
        Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: phi:   %indvars.iv10.i = phi i64 [ %indvars.iv.next11.i, %omp.inner.for.inc.i ], [ %14, %for.cond.preheader.lr.ph.i ]
SUSAN: find IV 809
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 2 containing: %for.body.i<header>,%for.body24.lr.ph.i,%for.body24.i,%for.inc40.i.loopexit,%for.inc40.i<latch><exiting>
    Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
trying to get IV for Loop:Loop at depth 3 containing: %for.body24.i<header><latch><exiting>

SUSAN: found IV 784
SUSAN: emitting branch:   br i1 %cmp23.i, label %for.body24.i, label %for.inc40.i.loopexit, !dbg !113, !llvm.loop !122
printing BB:for.inc40.i.loopexitat 6187
SUSAN: emitting branch:   br label %for.inc40.i, !dbg !124
SUSAN: printing instruction:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next9.i, metadata !292, metadata !DIExpression()) #7, !dbg !300 at 6198
SUSAN: printing instruction   call void @llvm.dbg.value(metadata i64 %indvars.iv.next9.i, metadata !292, metadata !DIExpression()) #7, !dbg !300 at 6003
SUSAN: did omp_SkipVals skips my inst?
printing BB:omp.inner.for.inc.i.loopexitat 6187
SUSAN: emitting branch:   br label %omp.inner.for.inc.i, !dbg !92
SUSAN: printing instruction:   call void @llvm.dbg.value(metadata i64 %indvars.iv.next11.i, metadata !283, metadata !DIExpression()) #7, !dbg !300 at 6198
SUSAN: printing instruction   call void @llvm.dbg.value(metadata i64 %indvars.iv.next11.i, metadata !283, metadata !DIExpression()) #7, !dbg !300 at 6003
SUSAN: did omp_SkipVals skips my inst?
SUSAN: printing instruction:   call void @llvm.dbg.value(metadata i32 %cond.i, metadata !289, metadata !DIExpression()) #7, !dbg !300 at 6198
SUSAN: printing instruction   call void @llvm.dbg.value(metadata i32 %cond.i, metadata !289, metadata !DIExpression()) #7, !dbg !300 at 6003
SUSAN: did omp_SkipVals skips my inst?
SUSAN: br:  br label %for.body.i, !dbg !107
SUSAN: br:  br label %for.body24.i, !dbg !113
SUSAN: br:  br i1 %cmp23.i, label %for.body24.i, label %for.inc40.i.loopexit, !dbg !113, !llvm.loop !122
SUSAN: br:  br label %for.inc40.i, !dbg !124
SUSAN: br:  br i1 %exitcond.i, label %omp.inner.for.inc.i.loopexit, label %for.body.i, !dbg !107, !llvm.loop !126
SUSAN: br:  br label %omp.inner.for.inc.i, !dbg !92
SUSAN: br:  br i1 %cmp16.i, label %for.cond.preheader.i, label %omp.loop.exit.i.loopexit, !dbg !93, !llvm.loop !128
SUSAN: printing bb:omp.loop.exit.i.loopexit
SUSAN: emitting branch:   br label %omp.loop.exit.i, !dbg !129
SUSAN: br:  br label %omp.loop.exit.i, !dbg !129
SUSAN: printing bb:omp.loop.exit.i
SUSAN: emitting branch:   br label %.omp_outlined._debug__.exit, !dbg !129
SUSAN: br:  br label %.omp_outlined._debug__.exit, !dbg !129
SUSAN: printing bb:.omp_outlined._debug__.exit
SUSAN: currGlob: @0 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0) }, align 8
SUSAN: currGlob: @1 = private unnamed_addr constant [27 x i8] c";gemm.c;kernel_gemm;68;1;;\00", align 1
SUSAN: currGlob: @stderr = external dso_local local_unnamed_addr global %struct._IO_FILE*, align 8
SUSAN: currGlob: @.str.1 = private unnamed_addr constant [8 x i8] c"%0.2lf \00", align 1
SUSAN: currGlob: @2 = private unnamed_addr constant %struct.ident_t { i32 0, i32 514, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0) }, align 8
SUSAN: currGlob: @3 = private unnamed_addr constant [27 x i8] c";gemm.c;kernel_gemm;70;3;;\00", align 1
SUSAN: currGlob: @4 = private unnamed_addr constant [28 x i8] c";gemm.c;kernel_gemm;70;32;;\00", align 1
SUSAN: currGlob: @.str = private unnamed_addr constant [23 x i8] c";unknown;unknown;0;0;;\00", align 1
SUSAN: currGlob: @0 = private unnamed_addr constant %struct.ident_t { i32 0, i32 2, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0) }, align 8
SUSAN: first index is struct or array type
SUSAN: currGlob: @2 = private unnamed_addr constant %struct.ident_t { i32 0, i32 514, i32 0, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0) }, align 8
SUSAN: first index is struct or array type
